(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{600:function(t,a,s){t.exports=s.p+"assets/img/await_signal.8705164b.png"},601:function(t,a,s){t.exports=s.p+"assets/img/aqs_acquire.fce76401.png"},602:function(t,a,s){t.exports=s.p+"assets/img/jmm.f3220bd8.jpg"},618:function(t,a,s){"use strict";s.r(a);var n=s(24),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"基础api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基础api"}},[t._v("#")]),t._v(" 基础API")]),t._v(" "),n("h6",{attrs:{id:"thread-sleep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#thread-sleep"}},[t._v("#")]),t._v(" "),n("code",[t._v("Thread.sleep()")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("此处可避免"),n("code",[t._v("while() {}")]),t._v("循环空转消耗cpu性能，使用"),n("code",[t._v("sleep()")]),t._v("或"),n("code",[t._v("yield()")]),t._v("适当让出cpu使用权")]),t._v(" "),n("blockquote",[n("p",[t._v("适用于无须锁同步的场景")])]),t._v(" "),n("h6",{attrs:{id:"thread1-join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#thread1-join"}},[t._v("#")]),t._v(" "),n("code",[t._v("<thread1>.join()")])]),t._v(" "),n("p",[t._v("调用线程进行阻塞，同步等待thread1执行结束")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 休眠1s")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 休眠2s")]),t._v("\n\nt1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nt2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只需额外等待1s（两线程与主线程同时开始执行，主线程分别只对两线程的结束时机进行同步等待）")]),t._v("\n")])])]),n("h6",{attrs:{id:"thread1-interrupt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#thread1-interrupt"}},[t._v("#")]),t._v(" "),n("code",[t._v("<thread1>.interrupt()")])]),t._v(" "),n("ol",[n("li",[t._v("正常运行的线程被打断后，打断标记"),n("code",[t._v("isInterrupted()")]),t._v("为"),n("code",[t._v("true")]),t._v("（意味着可通过该标记进行后续处理）")]),t._v(" "),n("li",[t._v("通过调用"),n("code",[t._v("sleep()")]),t._v("、"),n("code",[t._v("wait()")]),t._v("、"),n("code",[t._v("join()")]),t._v("等方法处于阻塞状态的线程被打断后，打断标记将被自动清空，置为"),n("code",[t._v("false")]),t._v("（意味着线程已进入异常，该标记已失去作用，可在"),n("code",[t._v("catch")]),t._v("块中重新设置标记为"),n("code",[t._v("true")]),t._v("）")]),t._v(" "),n("li",[t._v("通过调用"),n("code",[t._v("park()")]),t._v("方法处于阻塞状态的线程被打断后，打断标记为"),n("code",[t._v("true")]),t._v("；若不手动重置该标记为"),n("code",[t._v("false")]),t._v("（静态方法"),n("code",[t._v("Thread.interrupt()")]),t._v("），则后续的"),n("code",[t._v("park()")]),t._v("操作均会失效")])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("二阶段终止模式")]),t._v("实现监控流程")]),t._v(" "),n("div",{staticClass:"language-mermaid extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('graph TD\nw("while(true)") --\x3e a\na("isInterrupted()") -- true --\x3e b("释放资源")\nb --\x3e c("结束循环")\na -- false --\x3e d("sleep()")\nd -- 无异常 --\x3e e("执行监控业务")\nd -- 出现异常 --\x3e i("设置打断标记")\ni --\x3e w\ne --\x3e w\n')])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TwoPhaseTermination")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" monitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startMonitor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t\tmonitor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" currentThread "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentThread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInterrupted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n          \t\t释放资源\n          \t\t*/")]),t._v("\n          \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          \t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n          \t\t执行监控业务\n          \t\t*/")]),t._v("\n        \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          \t\tcurrentThread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 阻塞过程中被打断，需手动再次设置打断标记（重新打断）")]),t._v("\n        \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t\tmonitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopMonitor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\tmonitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("h1",{attrs:{id:"共享内存模型-管程-悲观锁-阻塞式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#共享内存模型-管程-悲观锁-阻塞式"}},[t._v("#")]),t._v(" 共享内存模型：管程（悲观锁，阻塞式）")]),t._v(" "),n("p",[t._v("避免临界区竞态条件发生的多种方式")]),t._v(" "),n("h2",{attrs:{id:"synchronized"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#synchronized"}},[t._v("#")]),t._v(" "),n("code",[t._v("synchronized")])]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("通过"),n("strong",[t._v("对象锁")]),t._v("保证临界区内代码的原子性")]),t._v(" "),n("li",[n("code",[t._v("synchronized")]),t._v("锁为可重入锁")]),t._v(" "),n("li",[t._v("对象模型：\n"),n("ul",[n("li",[t._v("重入计数器❓")]),t._v(" "),n("li",[t._v("Contention List")]),t._v(" "),n("li",[t._v("Entry List")]),t._v(" "),n("li",[t._v("Wait Set")]),t._v(" "),n("li",[t._v("On Deck")])])])])]),t._v(" "),n("h3",{attrs:{id:"局部变量和共享变量的线程安全问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#局部变量和共享变量的线程安全问题"}},[t._v("#")]),t._v(" 局部变量和共享变量的线程安全问题")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("不同线程对共享变量进行并发增删引发线程安全问题；而对于局部变量，不同线程分别拥有一份自己的局部变量实例，此时不引发线程安全问题")])]),t._v(" "),n("li",[t._v("若在"),n("strong",[t._v("父类public方法/非final方法/abstract方法")]),t._v("中"),n("strong",[t._v("传入或返回对象")]),t._v("（"),n("strong",[t._v("局部变量引用了对象，并逃离该栈帧")]),t._v("，即发生"),n("strong",[t._v("引用泄漏")]),t._v("），则子类可对父类方法进行重写（"),n("strong",[t._v("外星方法")]),t._v("），以实现对该局部变量的并发增删（方法内部开启线程对变量进行操作），此时局部变量成为共享变量，仍将引发线程安全问题")]),t._v(" "),n("li",[t._v("Java Web环境")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImpl")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无状态，线程安全")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),t._v(" userDao "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非线程安全")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Aspect")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomAspect")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单例")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非线程安全")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(* *(..))"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@After")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(* *(..))"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("after")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("解决方式：采用环绕通知，将计时器用作局部变量")]),t._v(" "),n("h3",{attrs:{id:"synchronized锁的优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#synchronized锁的优化"}},[t._v("#")]),t._v(" "),n("code",[t._v("synchronized")]),t._v("锁的优化")]),t._v(" "),n("h4",{attrs:{id:"轻量级锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#轻量级锁"}},[t._v("#")]),t._v(" 轻量级锁")]),t._v(" "),n("p",[t._v("多线程访问没有竞争现象，优先使用轻量级锁")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("创建锁记录（Lock Record）对象")])]),t._v(" "),n("li",[n("p",[t._v("锁记录对象中"),n("strong",[t._v("Object Reference")]),t._v("指向加锁对象，并尝试通过CAS将锁记录对象中"),n("strong",[t._v("地址字段")]),t._v("（"),n("code",[t._v("ptr_to_lock_record:30")]),t._v(" | "),n("code",[t._v("00")]),t._v("）与加锁对象的Mark Word（非加锁状态下末两位为"),n("code",[t._v("01")]),t._v("）替换")]),t._v(" "),n("p",[t._v("（若CAS失败，进行锁的"),n("strong",[t._v("膨胀")]),t._v("；或进行轻量级锁"),n("strong",[t._v("重入")]),t._v("，额外维护一个新的锁记录对象信息）")])]),t._v(" "),n("li",[n("p",[t._v("（解锁）通过CAS进行解锁，还原加锁对象的Mark Word（若CAS失败，执行重量级锁的解锁流程）")])])]),t._v(" "),n("h4",{attrs:{id:"偏向锁-轻量级锁的优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#偏向锁-轻量级锁的优化"}},[t._v("#")]),t._v(" 偏向锁（轻量级锁的优化）")]),t._v(" "),n("p",[t._v("在加锁对象的Mark Word字段中加入当前线程的ID信息，当同一线程再次对该对象进行加锁时避免反复的CAS操作；当其他线程对该对象进行加锁时撤销该对象的偏向状态")]),t._v(" "),n("ul",[n("li",[t._v("批量重偏向：当反复出现新线程对该对象进行加锁的情况时，不再直接撤销该对象的偏向状态，而是修改该类所有新实例对象的偏向状态为偏向新线程（偏向撤销阈值：20）")]),t._v(" "),n("li",[t._v("批量偏向撤销：当再次反复出现另一新线程对该对象进行加锁的情况时，不再修改该对象的偏向状态，而是直接禁用该类所有新实例对象的偏向资格（偏向撤销阈值：40）")])]),t._v(" "),n("blockquote",[n("p",[t._v("因对象的Mark Word字段在不可偏向时才包含hashCode信息（在可偏向时替换为偏向线程ID与epoch信息），故显式调用加锁对象的"),n("code",[t._v("hashCode()")]),t._v("方法将撤销该对象的偏向状态（"),n("code",[t._v("1 | 01")]),t._v(" -> "),n("code",[t._v("0 | 01")]),t._v("，倒数第三位为偏向状态，1为可偏向，0为不可偏向）")])]),t._v(" "),n("h4",{attrs:{id:"重量级锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重量级锁"}},[t._v("#")]),t._v(" 重量级锁")]),t._v(" "),n("ol",[n("li",[t._v("为加锁对象申请Monitor锁，将加锁对象的轻量级锁记录地址字段再次替换为Monitor锁地址（"),n("code",[t._v("ptr_to_monitor:30")]),t._v(" | "),n("code",[t._v("10")]),t._v("）")]),t._v(" "),n("li",[t._v("当前线程进入Monitor锁的Entry List，进入**"),n("code",[t._v("BLOCKED")]),t._v("**状态")]),t._v(" "),n("li",[t._v("（解锁）通过加锁对象的Monitor锁地址信息定位Monitor锁，设置Monitor锁的Owner对象为空，并唤醒Monitor锁Entry List中阻塞的线程（非公平锁）")])]),t._v(" "),n("blockquote",[n("p",[t._v("自旋优化")])]),t._v(" "),n("h4",{attrs:{id:"锁消除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#锁消除"}},[t._v("#")]),t._v(" 锁消除")]),t._v(" "),n("p",[t._v("当加锁对象未逃逸局部代码块的作用范围（不可能成为共享变量）时，JIT将锁消除")]),t._v(" "),n("h2",{attrs:{id:"线程等待与通知"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程等待与通知"}},[t._v("#")]),t._v(" 线程等待与通知")]),t._v(" "),n("h3",{attrs:{id:"object-wait-notify"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#object-wait-notify"}},[t._v("#")]),t._v(" ("),n("code",[t._v("Object")]),t._v(")"),n("code",[t._v("wait()")]),t._v("/"),n("code",[t._v("notify()")])]),t._v(" "),n("h4",{attrs:{id:"底层原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#底层原理"}},[t._v("#")]),t._v(" 底层原理")]),t._v(" "),n("p",[t._v("在锁对象上调用"),n("code",[t._v("wait()")]),t._v("前必须确保获取对象的锁（在同步代码块中进行），并发生锁的膨胀（即只使用重量级锁），当前线程进入"),n("code",[t._v("Monitor")]),t._v("锁的Wait Set进行等待（"),n("code",[t._v("park()")]),t._v("）并释放锁；在锁对象上调用"),n("code",[t._v("notify()")]),t._v("前也必须确保获取对象的锁（在同步代码块中进行），"),n("u",[t._v("在退出同步块时")]),t._v("对应线程被真正唤醒（"),n("code",[t._v("unpark()")]),t._v("）后回到Entry List中进行阻塞，直至再次竞争锁成功，继续执行"),n("code",[t._v("wait()")]),t._v("后代码")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("notifyAll()")]),t._v("按照LIFO顺序唤醒Entry List中阻塞的线程")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 线程A，消费者")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用while循环而非if，从而在线程被唤醒后保证等待条件不满足时才继续执行，以避免虚假唤醒")]),t._v("\n  \tlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行正常流程")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 线程B，生产者")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  lock.notify()将随机唤醒Entry List中的线程，故可能造成虚假唤醒\n  */")]),t._v("\n  lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("h5",{attrs:{id:"同步模式之保护性暂停-guarded-suspension-模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#同步模式之保护性暂停-guarded-suspension-模式"}},[t._v("#")]),t._v(" 同步模式之保护性暂停（Guarded Suspension）模式")]),t._v(" "),n("p",[t._v("当线程t1等待线程t1的执行结果，可分别关联同一个"),n("code",[t._v("GuardedObject")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录初始时间")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断消耗时间passedTime是否超过timeout，若是则退出循环")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t\t\t当被虚假唤醒后重新进入循环时，应该继续等待的时间为timeout - passedTime\n\t\t\t*/")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" passedTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" rawObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tresponse "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rawObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("一个生产者通过"),n("code",[t._v("GuardedObject")]),t._v("对象严格对应一个消费者")]),t._v(" "),n("li",[t._v("相比于"),n("code",[t._v("join()")]),t._v("（原理一致），上述模式中消费者无需等待生产者线程完全结束就能消费资源")])]),t._v(" "),n("h5",{attrs:{id:"异步模式之异步队列模式-生产者-消费者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步模式之异步队列模式-生产者-消费者"}},[t._v("#")]),t._v(" 异步模式之异步队列模式（生产者/消费者）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedList")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" capacity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeFirst")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" rawObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" capacity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLast")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("h3",{attrs:{id:"conditionobject-await-signal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#conditionobject-await-signal"}},[t._v("#")]),t._v(" ("),n("code",[t._v("ConditionObject")]),t._v(")"),n("code",[t._v("await")]),t._v("/"),n("code",[t._v("signal")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(600),alt:"img"}})]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 借助await/signal机制实现生产者/消费者模型")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" condition1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 线程A，消费者")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*执行条件A不满足*/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcondition1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行业务操作")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \tlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 线程B，生产者")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更改执行条件A")]),t._v("\n  \tcondition1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \tlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"底层原理-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#底层原理-2"}},[t._v("#")]),t._v(" 底层原理")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("ConditionObject")]),t._v("条件对象上（对当前线程）调用"),n("code",[t._v("await()")]),t._v("，当前线程若竞争lock成功，则尾插入进AQS等待队列中进行等待（"),n("code",[t._v("park()")]),t._v("）并释放lock；在"),n("code",[t._v("ConditionObject")]),t._v("条件对象上调用"),n("code",[t._v("signal()")]),t._v("将该线程转移至AQS阻塞队列中进行阻塞，直至再次竞争lock成功后被唤醒（"),n("code",[t._v("unpark()")]),t._v("），继续执行"),n("code",[t._v("await()")]),t._v("后代码")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("signalAll()")]),t._v("按照FIFO顺序唤醒AQS阻塞队列中阻塞的线程")])]),t._v(" "),n("h5",{attrs:{id:"await"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#await"}},[t._v("#")]),t._v(" "),n("code",[t._v("await()")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 将当前线程包装成Node，尾插入到AQS等待队列中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConditionWaiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 释放当前线程所占用的lock，在释放的程中会唤醒AQS阻塞队列中的下一个节点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" savedState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fullyRelease")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" interruptMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isOnSyncQueue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 当前线程进入到等待状态")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockSupport")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("park")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interruptMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkInterruptWhileWaiting")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 自旋等待获取同步状态/lock（成功获取lock是退出await()的充要条件）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireQueued")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" savedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" interruptMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" THROW_IE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        interruptMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" REINTERRUPT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextWaiter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// clean up if cancelled")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlinkCancelledWaiters")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 处理中断")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interruptMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reportInterruptAfterWait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interruptMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h5",{attrs:{id:"signal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#signal"}},[t._v("#")]),t._v(" "),n("code",[t._v("signal()")])]),t._v(" "),n("p",[t._v("将AQS等待队列中等待时间最长的节点移动到AQS阻塞队列中")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 先检测当前线程是否已经获取lock")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldExclusively")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalMonitorStateException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 获取AQS等待队列中头节点，将其移动至AQS阻塞队列中等待再次获取lock从而被唤醒")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstWaiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// doSignal(Node)中的transferForSignal(Node)方法实现对头节点的状态检查、队列转移与（后续的）线程unpark")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSignal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[n("code",[t._v("Object.wait()")]),t._v("/"),n("code",[t._v("Object.notify()")]),t._v("与"),n("code",[t._v("Condition.await()")]),t._v("/"),n("code",[t._v("Condition.signal()")]),t._v("区别")])]),t._v(" "),n("p",[t._v("前者与"),n("code",[t._v("Monitor")]),t._v("配合完成线程间的等待/通知机制，是java底层级别的；而后者与"),n("code",[t._v("Lock")]),t._v("配合完成等待/通知机制，是语言级别的，具有更高的可控性和扩展性")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("后者支持不响应中断，而前者不支持")])]),t._v(" "),n("li",[n("p",[t._v("后者支持多个等待队列（借助多个"),n("code",[t._v("ConditionObject")]),t._v("对象实现），而前者只支持一个")])]),t._v(" "),n("li",[n("p",[t._v("后者支持超时时间的设置，而前者不支持")])])])]),t._v(" "),n("h2",{attrs:{id:"lock锁-java-util-concurrent-locks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lock锁-java-util-concurrent-locks"}},[t._v("#")]),t._v(" "),n("code",[t._v("Lock")]),t._v("锁（"),n("code",[t._v("java.util.concurrent.locks.*")]),t._v("）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lockInterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),t._v(" unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[t._v("无参构造器默认构造"),n("strong",[t._v("非公平锁")])]),t._v(" "),n("li",[t._v("支持在多个条件变量上进行等待，在唤醒时可按照不同的条件变量进行精确唤醒")])]),t._v(" "),n("h3",{attrs:{id:"abstractqueuedsynchronizer-aqs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstractqueuedsynchronizer-aqs"}},[t._v("#")]),t._v(" "),n("code",[t._v("AbstractQueuedSynchronizer")]),t._v("（AQS）")]),t._v(" "),n("p",[t._v("Lock等同步组件主要专注于实现同步语义，而AQS负责同步状态管理，线程排队、等待与唤醒等底层操作")]),t._v(" "),n("h4",{attrs:{id:"核心组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#核心组件"}},[t._v("#")]),t._v(" 核心组件")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("State")]),t._v("同步状态")]),t._v(" "),n("p",[t._v("通过"),n("code",[t._v("State")]),t._v("体现加锁状态与重入次数")]),t._v(" "),n("p",[t._v("子类通过"),n("code",[t._v("getState()")]),t._v("/"),n("code",[t._v("setState()")]),t._v("/"),n("code",[t._v("compareAndSetState()")]),t._v("重写AQS用来改变同步状态的若干protected方法")]),t._v(" "),n("p",[t._v("对同步状态的获取/释放可分为"),n("strong",[t._v("独占模式")]),t._v("与"),n("strong",[t._v("共享模式")])])]),t._v(" "),n("li",[n("h5",{attrs:{id:"abstractqueuedsynchronizer-node双向阻塞队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstractqueuedsynchronizer-node双向阻塞队列"}},[t._v("#")]),t._v(" "),n("code",[t._v("AbstractQueuedSynchronizer$Node")]),t._v("双向阻塞队列")]),t._v(" "),n("p",[t._v("阻塞队列/同步队列（双向链表，FIFO队列）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" waitStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 节点状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前节点/线程的前驱节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前节点/线程的后继节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加入同步队列的线程引用")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transient")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transient")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" tail"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[n("p",[t._v("等待队列/条件队列（单向链表）："),n("code",[t._v("ConditionObject")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transient")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" firstWaiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待队列中的头节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transient")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" lastWaiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待队列中的尾节点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" nextWaiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待队列中的下一个节点")]),t._v("\n")])])])])])])]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("*Lock")]),t._v(" -> "),n("code",[t._v("Lock")]),t._v(" -> "),n("code",[t._v("AbstractQueuedSynchronizer")]),t._v(" -> "),n("code",[t._v("Sync")])]),t._v(" "),n("h6",{attrs:{id:"模板方法设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模板方法设计模式"}},[t._v("#")]),t._v(" 模板方法设计模式")]),t._v(" "),n("p",[n("code",[t._v("tryAcquire(int)")]),t._v("等方法被"),n("code",[t._v("*Sync")]),t._v("子类重写（其中"),n("code",[t._v("*Sync")]),t._v("子类为"),n("code",[t._v("*Lock")]),t._v("子类的静态内部类），当"),n("code",[t._v("*Sync")]),t._v("子类调用"),n("code",[t._v("acquire(int)")]),t._v("等AQS模板方法时就会调用已被本类重写的方法；同步组件通过AQS提供的模板方法实现同步语义")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("tryAcquire(int)")]),t._v("：独占式获取与释放同步状态")]),t._v(" "),n("li",[n("code",[t._v("tryRelease(int)")])]),t._v(" "),n("li",[n("code",[t._v("tryAcquireShared(int)")]),t._v("：共享式获取与释放同步状态")]),t._v(" "),n("li",[n("code",[t._v("tryReleaseShared(int)")])]),t._v(" "),n("li",[n("code",[t._v("isHeldExclusively()")]),t._v("：查询同步队列中等待线程情况")])]),t._v(" "),n("p",[t._v("同步器是实现锁的关键：利用同步器可实现锁的语义。锁面向使用者，它定义了使用者与锁交互的接口，隐藏了实现细节；同步器面向锁的实现者，它简化了锁的实现方式，屏蔽了同步状态的管理，线程的排队，等待和唤醒等底层操作。锁和同步器针对使用者和实现者实现了关注点分离。")])]),t._v(" "),n("h4",{attrs:{id:"独占锁-共享锁的获取与释放"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#独占锁-共享锁的获取与释放"}},[t._v("#")]),t._v(" 独占锁/共享锁的获取与释放")]),t._v(" "),n("h5",{attrs:{id:"acquire-int"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#acquire-int"}},[t._v("#")]),t._v(" "),n("code",[t._v("acquire(int)")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尝试获取State，获取失败时进入阻塞队列")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireQueued")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWaiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EXCLUSIVE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selfInterrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWaiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 基于当前线程构建Node节点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 查看当前尾节点是否为空")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" pred "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tail"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pred "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将当前节点以“CAS尾插”的方式插入阻塞队列中")]),t._v("\n        node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prev "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pred"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetTail")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pred"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            pred"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前阻塞队列尾节点为null，说明当前线程是第一个加入阻塞队列进行等待的线程：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 调用compareAndSetHead(new Node())方法，完成阻塞队列头结点的初始化")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 自旋不断尝试CAS尾插入直至成功为止")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enq")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireQueued")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" interrupted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("predecessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若前驱节点为头节点，再次尝试获取State")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" head "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取State成功，队列头指针指向当前节点并释放前驱节点")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHead")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// help GC")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" interrupted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取State失败，线程进入等待状态（通过CAS将节点状态由INITIAL设置成SIGNAL）")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldParkAfterFailedAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parkAndCheckInterrupt()借助LockSupport.park()真正实现线程阻塞")]),t._v("\n                interrupted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parkAndCheckInterrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancelAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interrupted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selfInterrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(601),alt:"img"}})]),t._v(" "),n("h5",{attrs:{id:"release-int"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#release-int"}},[t._v("#")]),t._v(" "),n("code",[t._v("release(int)")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("release")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尝试释放State")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryRelease")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 释放State成功，唤醒队列头节点后继节点所引用线程（FIFO队列），其中借助LockSupport.unpark()真正实现线程唤醒")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waitStatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unparkSuccessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("acquireInterruptibly(int)")])]),t._v(" "),n("p",[n("code",[t._v("tryAcquireNanos(int)")])]),t._v(" "),n("h5",{attrs:{id:"acquireshared-int"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#acquireshared-int"}},[t._v("#")]),t._v(" "),n("code",[t._v("acquireShared(int)")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAcquireShared")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h5",{attrs:{id:"releaseshared-int"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#releaseshared-int"}},[t._v("#")]),t._v(" "),n("code",[t._v("releaseShared(int)")])]),t._v(" "),n("h3",{attrs:{id:"reentrantlock及其实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock及其实现原理"}},[t._v("#")]),t._v(" "),n("code",[t._v("ReentrantLock")]),t._v("及其实现原理")]),t._v(" "),n("h4",{attrs:{id:"锁的竞争"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#锁的竞争"}},[t._v("#")]),t._v(" 锁的竞争")]),t._v(" "),n("h5",{attrs:{id:"非公平锁-默认"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非公平锁-默认"}},[t._v("#")]),t._v(" 非公平锁（默认）")]),t._v(" "),n("p",[t._v("线程第一次获取锁时不对"),n("code",[t._v("Node")]),t._v("阻塞队列进行检查，直接通过CAS尝试争抢"),n("code",[t._v("State")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class NonFairSync")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSetState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setExclusiveOwnerThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("\n")])])]),n("ol",[n("li",[n("p",[t._v("若前驱节点为头节点，"),n("code",[t._v("tryAcquire()")]),t._v("再次尝试获取锁")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("获取锁成功")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("将前驱节点置为空，当前节点置为头节点；")]),t._v(" "),n("p",[n("code",[t._v("waitStatus")]),t._v("设置为1，Sync对象的"),n("code",[t._v("exclusiveOwnerThread")]),t._v("设置为当前节点所关联线程")])])])]),t._v(" "),n("li",[n("p",[t._v("获取锁失败")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("将前驱节点的"),n("code",[t._v("waitStatus")]),t._v("设置为-1（前驱节点有责任对本节点进行唤醒操作）；")]),t._v(" "),n("p",[n("code",[t._v("tryAcquire()")]),t._v("再次尝试获取锁，随后调用"),n("code",[t._v("LockSupport.park()")]),t._v("进行阻塞")])])])])])]),t._v(" "),n("li",[n("p",[t._v("释放锁："),n("code",[t._v("waitStatus")]),t._v("设置为0，（若"),n("code",[t._v("waitStatus")]),t._v("为-1）对阻塞队列中下一节点进行唤醒操作")])])]),t._v(" "),n("h5",{attrs:{id:"公平锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#公平锁"}},[t._v("#")]),t._v(" 公平锁")]),t._v(" "),n("p",[t._v("线程第一次获取锁时检查"),n("code",[t._v("Node")]),t._v("阻塞队列中是否有前驱节点（检查虚拟头节点的next节点所关联线程是否为本线程），若没有则通过CAS尝试争抢"),n("code",[t._v("State")])]),t._v(" "),n("h4",{attrs:{id:"线程的打断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程的打断"}},[t._v("#")]),t._v(" 线程的打断")]),t._v(" "),n("p",[n("code",[t._v("acquire()")])]),t._v(" "),n("p",[t._v("线程被打断时，仍停留在"),n("code",[t._v("Node")]),t._v("阻塞队列中，获取锁时能主动执行"),n("code",[t._v("selfInterrupt()")]),t._v("自我中断")]),t._v(" "),n("p",[n("code",[t._v("acquireInterruptibly()")])]),t._v(" "),n("p",[t._v("线程被打断时，仍停留在"),n("code",[t._v("Node")]),t._v("阻塞队列中，获取锁时将直接抛出"),n("code",[t._v("InterruptedException")])]),t._v(" "),n("h4",{attrs:{id:"线程的等待与唤醒"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程的等待与唤醒"}},[t._v("#")]),t._v(" 线程的等待与唤醒")]),t._v(" "),n("p",[t._v("持锁线程调用"),n("code",[t._v("await()")]),t._v("进行等待时：")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("addConditionWaiter")]),t._v("进入等待队列尾部，节点"),n("code",[t._v("waitStatus")]),t._v("改为-2，进行park阻塞")]),t._v(" "),n("li",[n("code",[t._v("fullyRelease()")]),t._v("完全释放AQS上的可重入锁")]),t._v(" "),n("li",[t._v("对阻塞队列下一个节点进行unpark")])]),t._v(" "),n("p",[t._v("持锁线程调用"),n("code",[t._v("signal()")]),t._v("进行唤醒时：")]),t._v(" "),n("ol",[n("li",[n("p",[n("code",[t._v("doSignal(first)")]),t._v("对等待队列队首线程进行唤醒")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("transferForSignal()")]),t._v("将唤醒线程加入阻塞队列尾部，节点"),n("code",[t._v("waitStatus")]),t._v("改为0，而其前驱节点的"),n("code",[t._v("waitStatus")]),t._v("设置为-1")]),t._v(" "),n("p",[t._v("若操作失败（如该线程状态已被设置为取消），则尝试唤醒等待队列下一节点所关联线程")])]),t._v(" "),n("li",[n("p",[t._v("对所唤醒线程进行unpark")])])]),t._v(" "),n("h3",{attrs:{id:"reentrantreadwritelock及其实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reentrantreadwritelock及其实现原理"}},[t._v("#")]),t._v(" "),n("code",[t._v("ReentrantReadWriteLock")]),t._v("及其实现原理")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("写锁支持条件变量，而读锁不支持")])]),t._v(" "),n("li",[n("p",[t._v("升级与降级")]),t._v(" "),n("ul",[n("li",[t._v("读锁在重入时不可升级为写锁，此时会发生死锁")]),t._v(" "),n("li",[t._v("写锁在重入时可降级为读锁")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CachedData")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isCacheValid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantReadWriteLock")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantReadWriteLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processCachedData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isCacheValid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本地缓存失效，改为获取写锁更新缓存")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取写锁前需释放读锁")]),t._v("\n      lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isCacheValid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 双重检查")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set data")]),t._v("\n        isCacheValid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将写锁降级为读锁")]),t._v("\n      lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真正使用数据")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use data")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("h4",{attrs:{id:"实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),n("h3",{attrs:{id:"locksupport-park-locksupport-unpark"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#locksupport-park-locksupport-unpark"}},[t._v("#")]),t._v(" "),n("code",[t._v("LockSupport.park()")]),t._v("/"),n("code",[t._v("LockSupport.unpark()")])]),t._v(" "),n("blockquote",[n("p",[t._v("AQS底层通过"),n("code",[t._v("park()")]),t._v("/"),n("code",[t._v("unpark()")]),t._v("实现线程的状态切换")])]),t._v(" "),n("h4",{attrs:{id:"park"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#park"}},[t._v("#")]),t._v(" "),n("code",[t._v("park()")])]),t._v(" "),n("ol",[n("li",[t._v("检查"),n("code",[t._v("Parker")]),t._v("对象的"),n("code",[t._v("_counter")]),t._v("字段")]),t._v(" "),n("li",[t._v("若"),n("code",[t._v("_counter")]),t._v("字段值为0，获取mutex，线程进入"),n("code",[t._v("_condition")]),t._v("条件变量进行阻塞")])]),t._v(" "),n("h4",{attrs:{id:"unpark"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unpark"}},[t._v("#")]),t._v(" "),n("code",[t._v("unpark()")])]),t._v(" "),n("ol",[n("li",[t._v("将"),n("code",[t._v("Parker")]),t._v("对象的"),n("code",[t._v("_counter")]),t._v("字段置为1")]),t._v(" "),n("li",[t._v("尝试唤醒"),n("code",[t._v("_condition")]),t._v("条件变量中的指定线程")])]),t._v(" "),n("blockquote",[n("p",[t._v("线程开始运行时，设置"),n("code",[t._v("_counter")]),t._v("字段为0")])]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"共享内存模型-无锁-乐观锁-非阻塞式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#共享内存模型-无锁-乐观锁-非阻塞式"}},[t._v("#")]),t._v(" 共享内存模型：无锁（乐观锁，非阻塞式）")]),t._v(" "),n("h2",{attrs:{id:"cas"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cas"}},[t._v("#")]),t._v(" CAS")]),t._v(" "),n("p",[t._v("CAS操作保证原子性，CAS实现类中借助"),n("code",[t._v("volatile")]),t._v("获取最新值进行比较，以实现线程安全")]),t._v(" "),n("blockquote",[n("p",[t._v("CAS操作适合短时间内即可获取到锁的场景，若线程需长时间等待锁释放，优先使用悲观锁")])]),t._v(" "),n("h3",{attrs:{id:"原子变量-java-util-concurrent-atomic"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原子变量-java-util-concurrent-atomic"}},[t._v("#")]),t._v(" 原子变量（"),n("code",[t._v("java.util.concurrent.atomic.*")]),t._v("）")]),t._v(" "),n("h5",{attrs:{id:"atomicinteger-atomiclong-atomicboolean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#atomicinteger-atomiclong-atomicboolean"}},[t._v("#")]),t._v(" "),n("code",[t._v("AtomicInteger")]),t._v("/"),n("code",[t._v("AtomicLong")]),t._v("/"),n("code",[t._v("AtomicBoolean")])]),t._v(" "),n("h5",{attrs:{id:"atomicreference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#atomicreference"}},[t._v("#")]),t._v(" "),n("code",[t._v("AtomicReference")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicReference")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" balance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// constructor")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBalance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" balance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("withdrawCash")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" amount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用乐观锁实现多个组合操作的原子性（BigDecimal单个方法为线程安全）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" prev "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" balance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("balance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("ABA问题")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("AtomicStampedReference")])]),t._v(" "),n("li",[n("code",[t._v("AtomicMarkableReference")])])])]),t._v(" "),n("h5",{attrs:{id:"atomicintegerarray"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#atomicintegerarray"}},[t._v("#")]),t._v(" "),n("code",[t._v("AtomicIntegerArray")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicIntegerArray")]),t._v(" states "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicIntegerArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("states"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("states"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数组中某元素锁，进行操作（如用于自定义连接池返回可用连接）")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数组中某元素锁，等待，避免循环空转消耗性能（需长时间等待锁释放，使用悲观锁）")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h5",{attrs:{id:"atomicfieldupdator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#atomicfieldupdator"}},[t._v("#")]),t._v(" "),n("code",[t._v("AtomicFieldUpdator")])]),t._v(" "),n("h5",{attrs:{id:"longadder"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#longadder"}},[t._v("#")]),t._v(" "),n("code",[t._v("LongAdder")])]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("LongAdder")]),t._v("源码分析")]),t._v(" "),n("ul",[n("li",[t._v("CAS锁")])])]),t._v(" "),n("h3",{attrs:{id:"unsafe"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unsafe"}},[t._v("#")]),t._v(" "),n("code",[t._v("Unsafe")])]),t._v(" "),n("h3",{attrs:{id:"不可变类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不可变类"}},[t._v("#")]),t._v(" 不可变类")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("DateTimeFormatter")])]),t._v(" "),n("li",[n("code",[t._v("String")])])]),t._v(" "),n("h6",{attrs:{id:"不可变类对象的设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不可变类对象的设计"}},[t._v("#")]),t._v(" 不可变类对象的设计")]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("String")]),t._v("类的保护性（防御性）拷贝：在有可能对本对象发生修改时，创建新对象返回，因此是线程安全的")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("String#substring()")])]),t._v(" "),n("p",[t._v("未解决对象实例创建过于频繁的问题，引入"),n("strong",[t._v("享元模式")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("基本类型包装类")]),t._v(" "),n("p",[t._v("在包装类对象创建之前，内部Cache对象已经将需缓存的对象全部创建完成")]),t._v(" "),n("div",{staticClass:"language-jav extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// Use the archived cache if it exists and is large enough\nif (archivedCache == null || size > archivedCache.length) {\n\tInteger[] c = new Integer[size];\n\tint j = low;\n\tfor(int i = 0; i < c.length; i++) {\n\t\tc[i] = new Integer(j++);\n\t}\n\tarchivedCache = c;\n}\ncache = archivedCache;\n\n// range [-128, 127] must be interned (JLS7 5.1.7)\nassert IntegerCache.high >= 127;\n")])])]),n("ul",[n("li",[n("code",[t._v("Byte")]),t._v("、"),n("code",[t._v("Short")]),t._v("、"),n("code",[t._v("Long")]),t._v("：-128～127")]),t._v(" "),n("li",[n("code",[t._v("Integer")]),t._v("：-128～127（最大值可通过"),n("code",[t._v("-Djava.lang.Integer.IntegerCache.high")]),t._v("调整）")]),t._v(" "),n("li",[n("code",[t._v("Character")]),t._v("：0～127")]),t._v(" "),n("li",[n("code",[t._v("Boolean")]),t._v("：true、false")])])]),t._v(" "),n("li",[n("p",[t._v("字符串常量池")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("BigDecimal")]),t._v("/"),n("code",[t._v("BigInteger")])])])])])])]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"jmm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jmm"}},[t._v("#")]),t._v(" JMM")]),t._v(" "),n("p",[t._v("Java内存模型（Java Memory Model，JMM）定义在Java虚拟机规范中，用于屏蔽掉各种硬件和操作系统的内存访问差异，以实现让Java程序在各种平台下都能达到一致的并发效果。JMM规范了Java虚拟机与计算机内存是如何协同工作的：规定了一个线程如何和何时可以看到由其他线程修改过后的共享变量的值，以及在必须时如何同步访问共享变量。")]),t._v(" "),n("p",[t._v("JVM内存分区与硬件内存架构之间存在差异。硬件内存架构没有区分线程栈和堆：线程栈和堆可能都分布于主内存中，部分线程栈和堆还可能出现在CPU寄存器与高速缓存中：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(602),alt:"img"}})]),t._v(" "),n("p",[t._v("因此，JMM还定义了JVM内存分区与硬件内存架构之间的抽象关系：")]),t._v(" "),n("p",[t._v("线程")]),t._v(" "),n("p",[t._v("​     ｜")]),t._v(" "),n("p",[t._v("工作内存（对应CPU寄存器与高速缓存）")]),t._v(" "),n("p",[t._v("​     ｜")]),t._v(" "),n("p",[t._v("主内存（对应主存）")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("针对主存、高速缓存及CPU寄存器之间的具体交互细节，常用的缓存一致性协议：MSI、MESI(IllinoisProtocol)、MOSI、Synapse、Firefly及DragonProtocol")])]),t._v(" "),n("li",[n("p",[t._v("针对主内存与工作内存之间的具体交互细节，即一个变量如何从主内存拷贝到工作内存，如何从工作内存同步到主内存，JMM定义了八种操作：")]),t._v(" "),n("p",[t._v("("),n("code",[t._v("lock")]),t._v("-"),n("code",[t._v("unlock")]),t._v(")->"),n("code",[t._v("read")]),t._v("->"),n("code",[t._v("load")]),t._v("->"),n("code",[t._v("use")]),t._v("->"),n("code",[t._v("assign")]),t._v("->"),n("code",[t._v("store")]),t._v("->"),n("code",[t._v("write")])])])]),t._v(" "),n("h2",{attrs:{id:"可见性-读同步问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可见性-读同步问题"}},[t._v("#")]),t._v(" 可见性（读同步问题）")]),t._v(" "),n("h4",{attrs:{id:"volatile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[t._v("#")]),t._v(" "),n("code",[t._v("volatile")])]),t._v(" "),n("p",[t._v("保证代码块内共享变量的可见性（每次只从主存，而非工作内存中读取），但不能保证代码块执行的原子性，故多用于“一写多读”的场景")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("LOAD")]),t._v("前缀指令实现读写屏障")]),t._v(" "),n("li",[t._v("MESI缓存一致性与总线嗅探")])]),t._v(" "),n("blockquote",[n("ul",[n("li",[n("code",[t._v("synchronized")]),t._v("可保证代码块的执行原子性及变量可见性（强制刷新工作内存），但一般为重量级操作，性能较低")]),t._v(" "),n("li",[n("code",[t._v("System.out.print()")]),t._v("语句内部有加锁操作，在IO操作后强制刷新工作内存，因此若代码块内有输出操作可不将共享变量声明为"),n("code",[t._v("volatile")])])])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("二阶段终止模式")]),t._v("实现监控流程")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非监控线程调用stopMonitor()方法，两共享变量必须在线程间保证可见性")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isStarted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isStopped"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" monitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startMonitor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isStarted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只需将读写共享变量部分纳入同步代码块（缩小同步范围，提升并发性能）")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isStarted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// balking（犹豫）模式")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tisStarted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n以下代码不会被多个线程并发执行，故无需加锁，因此所用到的共享变量需声明为volatile\n*/")]),t._v("\n\tmonitor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isStopped"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    \t执行监控业务\n    \t*/")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 借助isStopped共享变量实现循环优雅退出，不再依赖打断标记")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 释放资源\n */")]),t._v("\n isStarted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmonitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopMonitor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nisStopped "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tmonitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显式打断，以更快结束可能存在的sleep()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("h4",{attrs:{id:"threadlocal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal")])]),t._v(" "),n("p",[t._v("提供线程内部的局部变量，不同的线程间访问自身变量不会互相干扰（“空间（变量副本）换时间（并行执行）”）；作用于线程的整个生命周期，降低同一线程内多方法/组件间公共变量传递的复杂度")]),t._v(" "),n("ul",[n("li",[t._v("数据传递：独立保存各个线程绑定的数据，可在同一线程内多方法/组件间安全传递，避免额外传递参数所造成的代码耦合")]),t._v(" "),n("li",[t._v("线程隔离：各个线程绑定的数据相互隔离，但又支持并发存取，避免引入同步代码块所造成的性能损失")])]),t._v(" "),n("blockquote",[n("h6",{attrs:{id:"threadlocal使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal使用场景"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal")]),t._v("使用场景")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("多线程场景下，跨service-dao层传递原生"),n("code",[t._v("JDBC Connection")]),t._v("，使用"),n("code",[t._v("ThreadLocal")]),t._v("保证同一线程内两层间传递同一"),n("code",[t._v("JDBC Connection")]),t._v("（"),n("u",[t._v("数据库连接池实现思路")]),t._v("）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" threadLocal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" ds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeDataSource")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" threadLocal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    conn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newConnection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    threadLocal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" conn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("h5",{attrs:{id:"threadlocalmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalmap"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocalMap")])]),t._v(" "),n("p",[t._v("k:"),n("code",[t._v("ThreadLocal")]),t._v("对象 - v:该对象对应的变量副本")]),t._v(" "),n("h6",{attrs:{id:"以上kv键值对设计的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#以上kv键值对设计的优势"}},[t._v("#")]),t._v(" 以上kv键值对设计的优势")]),t._v(" "),n("ul",[n("li",[t._v("以"),n("code",[t._v("ThreadLocal")]),t._v("对象而非"),n("code",[t._v("Thread")]),t._v("对象本身作为key，每个Map存储的Entry数量降低")]),t._v(" "),n("li",[n("code",[t._v("ThreadLocalMap")]),t._v("对象由"),n("code",[t._v("Thread")]),t._v("对象本身进行维护，当"),n("code",[t._v("Thread")]),t._v("销毁时，"),n("code",[t._v("ThreadLocalMap")]),t._v("对象随之销毁")])]),t._v(" "),n("div",{staticClass:"language-mermaid extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("classDiagram\n  class ThreadLocalMap\n  ThreadLocalMap : +set(ThreadLocal<?> key, T value)\n  ThreadLocalMap : +remove(ThreadLocal<?> key)\n  ThreadLocalMap : +getEntry(ThreadLocal<?> key)\n  ThreadLocalMap : +int INITIAL_CAPACITY\n  ThreadLocalMap : +int size\n  ThreadLocalMap : +int threshold\n  ThreadLocalMap : +Entry[] table\n")])])]),n("h6",{attrs:{id:"threadlocal常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal常用方法"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal")]),t._v("常用方法")]),t._v(" "),n("h6",{attrs:{id:"threadlocal-set-t-value"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-set-t-value"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal.set(T value)")])]),t._v(" "),n("ol",[n("li",[t._v("获取当前线程对象t与线程对象内Map（t.threadLocals，即"),n("code",[t._v("ThreadLocalMap")]),t._v("对象）")]),t._v(" "),n("li",[t._v("若所获取的Map不为空，调用"),n("code",[t._v("ThreadLocalMap.set(ThreadLocal<?> key, T value)")]),t._v("为以当前"),n("code",[t._v("ThreadLocal")]),t._v("对象作为key的"),n("code",[t._v("ThreadLocalMap.Entry")]),t._v("赋值；否则调用"),n("code",[t._v("createMap(Thread t, T firstValue)")]),t._v("创建线程内Map并赋予初始值")])]),t._v(" "),n("h6",{attrs:{id:"threadlocal-get"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-get"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal.get()")])]),t._v(" "),n("ol",[n("li",[t._v("获取当前线程对象t与线程对象内Map")]),t._v(" "),n("li",[t._v("若所获取的Map不为空，调用"),n("code",[t._v("ThreadLocalMap.getEntry(ThreadLocal<?> key)")]),t._v("获取以当前"),n("code",[t._v("ThreadLocal")]),t._v("对象作为key的"),n("code",[t._v("ThreadLocalMap.Entry")]),t._v("，进而获取"),n("code",[t._v("ThreadLocalMap.Entry.value")]),t._v("返回")]),t._v(" "),n("li",[t._v("若获取的Map或Entry为空，调用"),n("code",[t._v("ThreadLocal.setInitialValue()")]),t._v("进行Map赋值或Map初始化（同"),n("code",[t._v("ThreadLocal.set(T value)")]),t._v("流程第二步）后返回")])]),t._v(" "),n("h6",{attrs:{id:"threadlocal-remove"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-remove"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal.remove()")])]),t._v(" "),n("ol",[n("li",[t._v("获取当前线程对象t与线程对象内Map")]),t._v(" "),n("li",[t._v("若所获取的Map不为空，调用"),n("code",[t._v("ThreadLocalMap.remove(ThreadLocal<?> key)")]),t._v("移除以当前"),n("code",[t._v("ThreadLocal")]),t._v("对象作为key的"),n("code",[t._v("ThreadLocalMap.Entry")])])]),t._v(" "),n("blockquote",[n("p",[t._v("引用链：Thread -> ThreadLocalMap -> ThreadLocalMap.Entry => ThreadLocal")]),t._v(" "),n("p",[n("code",[t._v("ThreadLocalMap.Entry")]),t._v("继承"),n("code",[t._v("WeakReference<ThreadLocal<?>>")]),t._v("，以便实现**"),n("code",[t._v("ThreadLocal")]),t._v("生命周期与线程生命周期的解绑**")]),t._v(" "),n("h4",{attrs:{id:"threadlocal可能产生的内存泄漏问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal可能产生的内存泄漏问题"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadLocal")]),t._v("可能产生的内存泄漏问题")]),t._v(" "),n("p",[t._v("（某线程运行时）若不及时对该线程中不再使用的"),n("code",[t._v("ThreadLocal")]),t._v("变量"),n("code",[t._v("threadLocalA")]),t._v("进行显式"),n("code",[t._v("remove()")]),t._v("操作，虽然该线程对应"),n("code",[t._v("ThreadLocalMap")]),t._v("的key值（即"),n("code",[t._v("threadLocalA")]),t._v("变量本身）将在本次GC时被置为空（弱引用），但"),n("code",[t._v("ThreadLocalMap.Entry")]),t._v("及"),n("code",[t._v("ThreadLocalMap.Entry.value")]),t._v("均无法"),n("strong",[t._v("立即")]),t._v("得到释放（强引用），且后者再无主动访问机会（key为空），造成内存泄漏")]),t._v(" "),n("p",[t._v("（即使未进行显式"),n("code",[t._v("remove()")]),t._v("操作）下一次执行"),n("code",[t._v("ThreadLocalMap.getEntry(..)")]),t._v("/"),n("code",[t._v("set(..)")]),t._v("方法时将对空key进行检查与清理（"),n("code",[t._v("expungeStaleEntry(int staleSlot)")]),t._v("），故"),n("strong",[t._v("在一定情况下，所发生的内存泄漏将被自动解决")]),t._v("（"),n("u",[t._v("弱引用的好处")]),t._v("）")]),t._v(" "),n("p",[t._v("因此，需在"),n("code",[t._v("ThreadLocal")]),t._v("变量使用结束后显式调用"),n("code",[t._v("ThreadLocal.remove()")]),t._v("对应Entry进行手动删除，以便实现**"),n("code",[t._v("ThreadLocalMap")]),t._v("生命周期与线程生命周期的解绑**，彻底杜绝内存泄漏（"),n("u",[t._v("显式"),n("code",[t._v("remove()")]),t._v("操作的好处")]),t._v("）")])]),t._v(" "),n("h5",{attrs:{id:"hash冲突"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hash冲突"}},[t._v("#")]),t._v(" Hash冲突")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocalMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" firstKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" firstValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    table "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INITIAL_CAPACITY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// INITIAL_CAPACITY = 16，可看作环形数组")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("threadLocalHashCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INITIAL_CAPACITY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hash函数（开放定址法❓）：借助AtomicInteger实现，每次计算hash时自增（getAndAdd）0x61c88647，以维持均匀哈希")]),t._v("\n    table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" firstValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setThreshold")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INITIAL_CAPACITY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 扩容threshold设置为INITIAL_CAPACITY的2/3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocal")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We don't use a fast path as with get() because it is at")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// least as common to use set() to create new entries as")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// it is to replace existing ones, in which case, a fast")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// path would fail more often than not.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相比于getEntry(..)方法直接根据key值定位Entry后采取快速失败策略，set(..)方法采用开放定址·线性探测（环形）法解决hash冲突，直至触发Entry清理与扩容")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"有序性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有序性"}},[t._v("#")]),t._v(" 有序性")]),t._v(" "),n("h5",{attrs:{id:"使用volatile修饰单例变量以防止指令重排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用volatile修饰单例变量以防止指令重排序"}},[t._v("#")]),t._v(" 使用"),n("code",[t._v("volatile")]),t._v("修饰单例变量以"),n("strong",[t._v("防止指令重排序")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("synchronized")]),t._v("不能阻止指令重排序，但只要所使用的局部变量不逃离同步代码块的作用范围，则虽有重排序却不会造成有序性问题")])]),t._v(" "),n("h5",{attrs:{id:"as-if-serial语义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#as-if-serial语义"}},[t._v("#")]),t._v(" as-if-serial语义")]),t._v(" "),n("p",[t._v("不论如何重排序，程序的执行结果不能与单线程执行结果发生冲突。（编译器、runtime和处理器都必须遵守as-if-serial语义）")]),t._v(" "),n("h5",{attrs:{id:"happens-before规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#happens-before规则"}},[t._v("#")]),t._v(" happens-before规则")]),t._v(" "),n("p",[t._v("在JMM中，如果一个操作执行的结果需要对另一个操作可见（两个操作既可以是在一个线程之内，也可以是在不同线程之间），那么两操作之间必须满足happens-before规则：")]),t._v(" "),n("ol",[n("li",[t._v("程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作")]),t._v(" "),n("li",[t._v("监视器锁定规则：对一个锁的解锁操作，happens-before于任意后续对这个锁的加锁操作")]),t._v(" "),n("li",[t._v("volatile域规则：对一个volatile域的写操作，happens-before于任意后续对这个volatile域的读操作")]),t._v(" "),n("li",[t._v("传递性规则：如果A happens-before B，且B happens-before C，那么A happens-before C")]),t._v(" "),n("li",[t._v("线程启动、中断、终结规则")]),t._v(" "),n("li",[t._v("对象终结规则")])]),t._v(" "),n("p",[t._v("以下场景，对共享变量的写操作对其读操作（本线程或其他线程）可见：")]),t._v(" "),n("ul",[n("li",[t._v("使用"),n("code",[t._v("synchronized")]),t._v("分别对写操作和读操作加锁")]),t._v(" "),n("li",[t._v("对"),n("code",[t._v("volatile")]),t._v("共享变量分别进行写操作和读操作")]),t._v(" "),n("li",[t._v("对共享变量的写操作发生在读线程启动之前")]),t._v(" "),n("li",[t._v("读操作阻塞直至写操作线程执行结束（"),n("code",[t._v("Thread.join()")]),t._v("）或被打断")])]),t._v(" "),n("blockquote",[n("h4",{attrs:{id:"单例模式最佳实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单例模式最佳实践"}},[t._v("#")]),t._v(" 单例模式最佳实践")]),t._v(" "),n("h5",{attrs:{id:"balking-犹豫-模式-配合同步代码块-实现懒汉式单例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#balking-犹豫-模式-配合同步代码块-实现懒汉式单例"}},[t._v("#")]),t._v(" balking（犹豫）模式（配合同步代码块）实现懒汉式单例")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" INSTANCE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \t\tINSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" INSTANCE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h6",{attrs:{id:"锁粒度优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#锁粒度优化"}},[t._v("#")]),t._v(" 锁粒度优化")]),t._v(" "),n("p",[t._v("缩小同步代码块范围，使用"),n("code",[t._v("volatile")]),t._v("修饰单例对象避免同步代码块重排序，同时使用"),n("strong",[t._v("double-checked locking")]),t._v("（DCL，双重检查、双检锁）实现懒汉式单例")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同步代码之外的共享变量可能存在有序性问题")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       \t\tINSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" INSTANCE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" INSTANCE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("其他单例模式")])]),t._v(" "),n("ul",[n("li",[n("h6",{attrs:{id:"通过反序列化过程实现的饿汉式单例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过反序列化过程实现的饿汉式单例"}},[t._v("#")]),t._v(" 通过反序列化过程实现的饿汉式单例")]),t._v(" "),n("ul",[n("li",[t._v("返回单例使用"),n("code",[t._v("final")]),t._v("防止子类继承破坏单例")]),t._v(" "),n("li",[t._v("实现"),n("code",[t._v("Serializable")]),t._v("接口，可重写"),n("code",[t._v("Object readResolve()")]),t._v("方法防止反序列化过程返回多例")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" INSTANCE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readResolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("h6",{attrs:{id:"通过枚举实现的饿汉式单例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通过枚举实现的饿汉式单例"}},[t._v("#")]),t._v(" 通过枚举实现的饿汉式单例")]),t._v(" "),n("p",[t._v("在类加载阶段保证线程安全，能保证在反序列化仍然返回单例，或在反射过程中因无法获取"),n("code",[t._v("<init>")]),t._v("而无法破坏单例")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  INSTANCE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("h6",{attrs:{id:"借助静态内部类实现的懒汉式单例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#借助静态内部类实现的懒汉式单例"}},[t._v("#")]),t._v(" 借助静态内部类实现的懒汉式单例")]),t._v(" "),n("p",[n("strong",[t._v("静态内部类在使用时才进行类加载")]),t._v("，为懒加载过程")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceHolder")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" INSTANCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 懒汉式，非饿汉式")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceHolder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INSTANCE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用时执行静态内部类的类加载，类加载阶段JVM保证对<clinit>过程加锁，且将加载的静态成员进行缓存（保证<clinit>方法只执行一次），从而实现线程安全的单例")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("h4",{attrs:{id:"内存屏障与final变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存屏障与final变量"}},[t._v("#")]),t._v(" 内存屏障与"),n("code",[t._v("final")]),t._v("变量")]),t._v(" "),n("ul",[n("li",[t._v("LoadLoad")]),t._v(" "),n("li",[t._v("StoreStore")]),t._v(" "),n("li",[t._v("LoadStore")]),t._v(" "),n("li",[n("strong",[t._v("StoreLoad")]),t._v("：在Load2及其后续的读取操作被执行前，保证Store1的写入对所有处理器可见（全能屏障，开销最大）")])]),t._v(" "),n("p",[t._v("针对"),n("code",[t._v("final")]),t._v("域的重排序规则：")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("final")]),t._v("域构造规则：在构造函数内对一个"),n("code",[t._v("final")]),t._v("域进行构造，随后一个变量对其进行引用，这两个操作之间不能重排序")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("final")]),t._v("域的写操作之后，构造函数返回之前，编译器插入一个storestore屏障，这个屏障禁止处理器把"),n("code",[t._v("final")]),t._v("域的写重排序到构造函数之外")])]),t._v(" "),n("li",[n("p",[t._v("初次读一个包含"),n("code",[t._v("final")]),t._v("域的对象的引用，与随后初次读这个"),n("code",[t._v("final")]),t._v("域，这两个操作之间不能重排序（❓）")])])]),t._v(" "),n("h2",{attrs:{id:"原子性-写同步问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原子性-写同步问题"}},[t._v("#")]),t._v(" 原子性（写同步问题）")]),t._v(" "),n("ul",[n("li",[t._v("普通变量：基本数据类型变量、引用类型变量、声明为volatile的任何类型变量的访问读写都具备原子性")]),t._v(" "),n("li",[t._v("代码块：使用"),n("code",[t._v("synchronized")]),t._v("关键字实现同步代码块")])]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"线程池"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[t._v("#")]),t._v(" 线程池")]),t._v(" "),n("h3",{attrs:{id:"executors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#executors"}},[t._v("#")]),t._v(" "),n("code",[t._v("Executors")])]),t._v(" "),n("p",[n("strong",[t._v("实际生产环境中，使用"),n("code",[t._v("ThreadPoolExecutor(int corePoolSize, // 1 int maximumPoolSize, // 2 long keepAliveTime, // 3 TimeUnit unit, // 4 BlockingQueue<Runnable> workQueue, // 5 ThreadFactory threadFactory, // 6 RejectedExecutionHandler handler // 7)")]),t._v("手动创建线程池")])]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("核心线程：开辟新线程执行任务")]),t._v(" "),n("li",[t._v("救急线程（非核心线程）：任务数大于"),n("code",[t._v("corePoolSize")]),t._v("时，新任务加入任务队列进行阻塞。若任务队列已满，则临时开辟救急线程执行任务，存活时间为"),n("code",[t._v("keepAliveTime")]),t._v("（"),n("strong",[t._v("达到存活时间时，被回收的可能是任一线程，不一定是该线程")]),t._v("）；若总线程数超过"),n("code",[t._v("maximumPoolSize")]),t._v("，执行拒绝策略")])])]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("Executors.newFixedThreadPool()")])]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("LinkedBlockingQueue")]),t._v("（无界），适用于任务数量固定，执行时间较长的场景")]),t._v(" "),n("p",[n("strong",[t._v("请求队列的长度为"),n("code",[t._v("Integer.MAX_VALUE")]),t._v("，可能导致大量请求堆积引发OOM")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("Executors.newCachedThreadPool()")])]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("SynchronousQueue")]),t._v("，适用于任务数量不定，执行时间较短的场景")]),t._v(" "),n("p",[n("strong",[t._v("允许创建的线程数量为"),n("code",[t._v("Integer.MAX_VALUE")]),t._v("，可能导致大量线程堆积引发OOM")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("Executors.newSingleThreadExecutor()")])]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("FinalizableDelegatedExecutorService")]),t._v("对返回的"),n("code",[t._v("ThreadPoolExecutor")]),t._v("对象进行包装，保证外界不能修改"),n("code",[t._v("ThreadPoolExecutor")]),t._v("对象的线程数")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("Executors.newScheduledThreadExecutor()")])]),t._v(" "),n("p",[t._v("原生定时任务")])])]),t._v(" "),n("h4",{attrs:{id:"threadpoolexecutor生命周期方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#threadpoolexecutor生命周期方法"}},[t._v("#")]),t._v(" "),n("code",[t._v("ThreadPoolExecutor")]),t._v("生命周期方法")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("execute()")]),t._v("/"),n("code",[t._v("submit()")])]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("submit()")]),t._v("方法接收"),n("code",[t._v("Future")]),t._v("对象，可通过返回值（"),n("code",[t._v("future.get()")]),t._v("）对任务中的异常进行捕获")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("invokeAll()")]),t._v("/"),n("code",[t._v("invokeAny()")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("shutdown")]),t._v("/"),n("code",[t._v("shutdownNow()")])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("prestartAllCoreThreads()")])]),t._v(" "),n("p",[t._v("提前创建等于核心线程数的线程数量（线程池预热）")])])]),t._v(" "),n("blockquote",[n("p",[t._v("工作线程模式（异步模式、分工模式、享元模式）")]),t._v(" "),n("p",[n("strong",[t._v("饥饿现象")])]),t._v(" "),n("p",[t._v("使用固定大小线程池，当线程数不足时导致的阻塞现象")]),t._v(" "),n("p",[t._v("解决方案：不同任务类型交给不同线程池进行处理，避免不同任务对线程的循环依赖")])]),t._v(" "),n("h4",{attrs:{id:"线程池线程数量选取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程池线程数量选取"}},[t._v("#")]),t._v(" 线程池线程数量选取")]),t._v(" "),n("blockquote",[n("p",[t._v("线程数量过多，可能导致系统资源竞争激烈、上下文切换频繁")]),t._v(" "),n("p",[t._v("线程数量过少，可能导致系统无法充分利用计算机资源")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("CPU密集型")]),t._v(" "),n("p",[t._v("$\\large{CPU核心数+1}$")])]),t._v(" "),n("li",[n("p",[t._v("IO密集型")]),t._v(" "),n("p",[t._v("$\\Large{\\frac{CPU核心数\\times{CPU期望利用率}\\times{总时间\\normalsize{（即CPU耗时+IO耗时）}}}{CPU耗时}}$")])])]),t._v(" "),n("h4",{attrs:{id:"线程池持久化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程池持久化"}},[t._v("#")]),t._v(" 线程池持久化")]),t._v(" "),n("p",[t._v("将队列中的任务信息落库，并维护任务状态")]),t._v(" "),n("h3",{attrs:{id:"forkjoinpool"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#forkjoinpool"}},[t._v("#")]),t._v(" "),n("code",[t._v("ForkJoinPool")])]),t._v(" "),n("p",[t._v("适用于任务可被拆分的场景")]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"并发集合类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#并发集合类"}},[t._v("#")]),t._v(" 并发集合类")]),t._v(" "),n("h2",{attrs:{id:"hashtable-vector"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hashtable-vector"}},[t._v("#")]),t._v(" "),n("code",[t._v("HashTable")]),t._v("/"),n("code",[t._v("Vector")])]),t._v(" "),n("p",[n("code",[t._v("put()")]),t._v("/"),n("code",[t._v("get()")]),t._v("方法均为"),n("code",[t._v("synchronized")]),t._v("同步方法，并发度低")]),t._v(" "),n("h2",{attrs:{id:"collections-synchronized"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#collections-synchronized"}},[t._v("#")]),t._v(" "),n("code",[t._v("Collections.Synchronized*")])]),t._v(" "),n("p",[n("code",[t._v("put()")]),t._v("/"),n("code",[t._v("get()")]),t._v("方法内均对同一"),n("code",[t._v("mutex")]),t._v("对象加入"),n("code",[t._v("synchronized")]),t._v("同步锁，并发度低")]),t._v(" "),n("h2",{attrs:{id:"blocking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#blocking"}},[t._v("#")]),t._v(" "),n("code",[t._v("Blocking*")])]),t._v(" "),n("h3",{attrs:{id:"linkedblockingqueue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linkedblockingqueue"}},[t._v("#")]),t._v(" "),n("code",[t._v("LinkedBlockingQueue")])]),t._v(" "),n("h3",{attrs:{id:"arrayblockingqueue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arrayblockingqueue"}},[t._v("#")]),t._v(" "),n("code",[t._v("ArrayBlockingQueue")])]),t._v(" "),n("p",[t._v("定长环形数组")]),t._v(" "),n("h2",{attrs:{id:"copyonwrite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#copyonwrite"}},[t._v("#")]),t._v(" "),n("code",[t._v("CopyOnWrite*")])]),t._v(" "),n("h3",{attrs:{id:"copyonwritearraylist"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#copyonwritearraylist"}},[t._v("#")]),t._v(" "),n("code",[t._v("CopyOnWriteArrayList")])]),t._v(" "),n("p",[t._v("无锁读，有锁写")]),t._v(" "),n("h2",{attrs:{id:"concurrent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#concurrent"}},[t._v("#")]),t._v(" "),n("code",[t._v("Concurrent*")])]),t._v(" "),n("h3",{attrs:{id:"concurrenthashmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap"}},[t._v("#")]),t._v(" "),n("code",[t._v("ConcurrentHashMap")])]),t._v(" "),n("h4",{attrs:{id:"_7︎⃣-分段锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7︎⃣-分段锁"}},[t._v("#")]),t._v(" 7︎⃣ “分段锁”")]),t._v(" "),n("p",[n("strong",[n("code",[t._v("Segment")]),t._v("数组每一元素（"),n("code",[t._v("Segment")]),t._v("分段，继承自"),n("code",[t._v("ReentrantLock")]),t._v("）对应一把锁，每一分段可视作小型"),n("code",[t._v("HashMap")]),t._v("，内部维护多个"),n("code",[t._v("HashEntry")]),t._v("数组")])]),t._v(" "),n("h5",{attrs:{id:"put"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#put"}},[t._v("#")]),t._v(" "),n("code",[t._v("put()")])]),t._v(" "),n("ol",[n("li",[n("p",[t._v("通过哈希函数计算出当前key的hash值")])]),t._v(" "),n("li",[n("p",[t._v("通过hash值计算出所对应的"),n("code",[t._v("Segment")]),t._v("数组下标")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算 Segment 下标")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" segmentShift"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" segmentMask\n")])])])]),t._v(" "),n("li",[n("p",[t._v("再通过hash值计算出所对应的"),n("code",[t._v("Segment")]),t._v("中"),n("code",[t._v("HashEntry")]),t._v("数组下标")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//计算 HashEntry 数组下标")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" hash\n")])])]),n("blockquote",[n("p",[t._v("尽量避免当前hash值所计算出来的"),n("code",[t._v("Segment")]),t._v("数组下标与"),n("code",[t._v("HashEntry")]),t._v("数组下标趋于相同，导致分配到同一个"),n("code",[t._v("Segment")]),t._v("中的元素都被分配到同一条链表上，导致链表过长，并降低并发度")])])]),t._v(" "),n("li",[n("p",[t._v("插入元素")])])]),t._v(" "),n("p",[n("code",[t._v("ensureSegment()")])]),t._v(" "),n("p",[n("code",[t._v("scanAndLockForPut()")])]),t._v(" "),n("p",[n("code",[t._v("rehash()")])]),t._v(" "),n("h5",{attrs:{id:"get"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" "),n("code",[t._v("get()")])]),t._v(" "),n("h5",{attrs:{id:"size"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" "),n("code",[t._v("size()")])]),t._v(" "),n("p",[t._v("基于“统计元素个数时"),n("code",[t._v("Segment")]),t._v("结构未发生变化”的假设进行三次尝试，若统计失败，对所有"),n("code",[t._v("Segment")]),t._v("进行强制加锁")]),t._v(" "),n("h4",{attrs:{id:"_8︎⃣-synchronized-cas"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8︎⃣-synchronized-cas"}},[t._v("#")]),t._v(" 8︎⃣ "),n("code",[t._v("synchronized")]),t._v("+CAS")]),t._v(" "),n("p",[n("strong",[t._v("弃用"),n("code",[t._v("Segment")]),t._v("分段锁，每个链表头节点（Bucket）对应一把（可优化的）同步锁，进一步提高并发度")])]),t._v(" "),n("ul",[n("li",[t._v("使用CAS优化加锁操作，提高吞吐量")]),t._v(" "),n("li",[t._v("弱一致性（fail-safe）")])]),t._v(" "),n("h5",{attrs:{id:"构造方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[t._v("#")]),t._v(" 构造方法")]),t._v(" "),n("p",[t._v("在构造器中进行懒惰初始化，只计算数组容量，在第一次使用时才真正创建table数组")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("initialCapacity")])]),t._v(" "),n("li",[n("code",[t._v("concurrencyLevel")]),t._v("：initialCapacity应至少与concurrencyLevel相等")]),t._v(" "),n("li",[n("code",[t._v("loadFactor")]),t._v("：取第一个大于initialCapacity/loadFactor值的2幂值作为数组的初始容量，最终存入"),n("code",[t._v("SIZECTL")]),t._v("（默认值为16）")])]),t._v(" "),n("h5",{attrs:{id:"put-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#put-2"}},[t._v("#")]),t._v(" "),n("code",[t._v("put()")])]),t._v(" "),n("p",[n("code",[t._v("put(K key, V value)")]),t._v("内部调用"),n("code",[t._v("putVal(key, value, false)")]),t._v("，每次设置值时用新值替换旧值")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("putVal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" onlyIfAbsent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若目标键值为空抛出NPE")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPointerException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hash函数：(h ^ (h >>> 16)) & HASH_BITS;  HASH_BITS = 0x7fffffff;")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与1.8HashMap中hash函数基本一致")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" hash "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" binCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Table数组为空，进行初始化")]),t._v("\n   \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用CAS（尝试将SIZECTL设置为-1）创建Table数组，并将SIZECTL设置为下一次扩容的阈值大小")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Table数组不为空，但key所在位置链表头节点（桶）为空")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tabAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*key位置无头节点*/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用CAS创建链表头节点（no lock when adding to empty bin）")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("casTabAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Table数组及key所在位置链表头节点（桶）均不为空")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" MOVED"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*key位置有头节点，但hash值为-1（正在扩容）*/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      tab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("helpTransfer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用多个工作线程协同进行元素迁移")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tabAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果hash值大于等于0，说明是正常的链表结构")]),t._v("\n     \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \t\tbinCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从头结点开始遍历，每遍历一次，binCount计数加1")]),t._v("\n      \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("binCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       \t\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),t._v(" ek"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功根据hash/key/value值找到key，进行值（新值替换旧值）")]),t._v("\n       \t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" hash "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        \t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ek "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         \t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ek "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ek"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t\t\t\toldVal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("onlyIfAbsent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         \t\t\t\t\te"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" pred "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若遍历到了尾结点（未找到key），则把新节点尾插进去")]),t._v("\n       \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t\t\t\tpred"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      \t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否为树节点")]),t._v("\n     \t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeBin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \t\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \t\t\tbinCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 操作红黑树")]),t._v("\n      \t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TreeBin")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("putTreeVal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       \t\t\t\toldVal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("onlyIfAbsent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \t\t\t\tp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      \n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若binCount达到treeify阈值（8），尝试将链表转为红黑树（检查table容量是否超过64）")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" TREEIFY_THRESHOLD"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*8*/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     \t\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("treeifyBin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把旧节点值返回")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     \t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" oldVal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过CAS进行哈希表元素个数计数，当binCount超过SIZECTL时进行扩容，在真正进行节点迁移时加同步锁")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addCount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" binCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在"),n("strong",[t._v("链表/红黑树更新/插入值")]),t._v("、"),n("strong",[t._v("链表转化为红黑树")]),t._v("、及"),n("strong",[t._v("扩容迁移节点")]),t._v("时加同步锁，减小锁粒度")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nextTab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 待补充")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Helps transfer if a resize is in progress.\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("helpTransfer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nextTab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ForwardingNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextTab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ForwardingNode")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据 length 得到一个标识符号")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" rs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resizeStamp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 tab 与 nextTab 都没有被并发修改")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 且 sizeCtl  < 0 （扩容中）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextTab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nextTable "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" table "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" tab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sizeCtl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 sizeCtl >>> 16 不等于 rs （ sc 前 16 位如果不等于标识符，说明标识符变化了）")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 sizeCtl == rs + 1 （扩容结束了，不再有线程进行扩容）（默认第一个线程设置 sc == rs 左移 16 位 + 2，当第一个线程结束扩容了，就会将 sc 减一。此时 sc == rs + 1）")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 sizeCtl == rs + 65535 （如果达到最大帮助线程的数量，即 65535）")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者转移下标正在调整 （扩容结束）")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束循环，返回 table")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" RESIZE_STAMP_SHIFT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" rs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" sc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" rs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n                sc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" rs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" MAX_RESIZERS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" transferIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果以上都不是, 将 sizeCtl 加一 （表示增加了一个线程帮助其扩容）")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("U")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSwapInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SIZECTL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行转移")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextTab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nextTab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h5",{attrs:{id:"get-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get-2"}},[t._v("#")]),t._v(" "),n("code",[t._v("get()")])]),t._v(" "),n("p",[t._v("无加锁操作，性能较高，但不能保证读取到的是最新数据（"),n("strong",[t._v("弱一致性")]),t._v("）")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. h确保为正整数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// e = tabAt(tab, (n - 1) & h)寻址")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若hash为负值表明数组正在扩容（-1，forwardingNode）或节点为红黑树（-2，Treebin），调用e.find(h, key)方法在newTable或红黑树中继续寻找")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若hash为正值，根据hash/key/value值遍历链表节点寻找目标数据")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"concurrentlinkedqueue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#concurrentlinkedqueue"}},[t._v("#")]),t._v(" "),n("code",[t._v("ConcurrentLinkedQueue")])]),t._v(" "),n("blockquote",[n("h6",{attrs:{id:"不同场景下的最优并发集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不同场景下的最优并发集合"}},[t._v("#")]),t._v(" 不同场景下的最优并发集合")])]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"juc并发工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#juc并发工具"}},[t._v("#")]),t._v(" JUC并发工具")]),t._v(" "),n("blockquote",[n("p",[t._v("底层基于AQS实现")])]),t._v(" "),n("h3",{attrs:{id:"stampedlock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stampedlock"}},[t._v("#")]),t._v(" "),n("code",[t._v("StampedLock")])]),t._v(" "),n("h3",{attrs:{id:"semaphore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#semaphore"}},[t._v("#")]),t._v(" "),n("code",[t._v("Semaphore")])]),t._v(" "),n("h3",{attrs:{id:"countdownlatch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch"}},[t._v("#")]),t._v(" "),n("code",[t._v("CountdownLatch")])]),t._v(" "),n("h3",{attrs:{id:"cyclicbarrier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cyclicbarrier"}},[t._v("#")]),t._v(" "),n("code",[t._v("CyclicBarrier")])]),t._v(" "),n("h3",{attrs:{id:"completablefuture"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#completablefuture"}},[t._v("#")]),t._v(" "),n("code",[t._v("CompletableFuture")])]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"非共享模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非共享模型"}},[t._v("#")]),t._v(" 非共享模型")])])}),[],!1,null,null,null);a.default=e.exports}}]);