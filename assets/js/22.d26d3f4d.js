(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{621:function(t,a,s){"use strict";s.r(a);var n=s(24),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ioc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc"}},[t._v("#")]),t._v(" IoC")]),t._v(" "),s("h3",{attrs:{id:"xml配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xml配置"}},[t._v("#")]),t._v(" XML配置")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("同一id的Bean对象在容器中的实例，默认作用域为"),s("code",[t._v("singleton")]),s("strong",[t._v("饿汉式")]),t._v("单例（容器创建时就完成单例对象的创建），"),s("code",[t._v("prototype")]),t._v("为"),s("strong",[t._v("懒汉式")]),t._v("多例（容器创建时不对对象进行创建），每次获取都会创建新的对象实例。单例模式下对象创建后调用"),s("code",[t._v("init-method")]),t._v("，容器销毁后调用"),s("code",[t._v("destroy-method")]),t._v("；原型模式下容器销毁后不会调用"),s("code",[t._v("destroy-method")])])]),t._v(" "),s("li",[s("p",[t._v("（使用"),s("code",[t._v("<property>")]),t._v("标签）对象初始化将调用无参构造器，并借助对象的setter方法为对象属性赋值；（使用"),s("code",[t._v("<constructor-arg>")]),t._v("标签）可改为使用含参构造器对对象进行直接初始化和赋值，若存在重载的构造器，则使用标签中的"),s("code",[t._v("type")]),t._v("属性指定装填参数的类型")])]),t._v(" "),s("li",[s("p",[t._v("若不同Bean对象的类型相同，则不能通过"),s("code",[t._v("getBean(类型)")]),t._v("方法获取特定Bean")])]),t._v(" "),s("li",[s("p",[t._v("通过静态工厂创建Bean对象；通过实例工厂创建Bean对象（通过工厂方法）；通过"),s("code",[t._v("FactoryBean<T>")]),t._v("实现类创建Bean对象（"),s("strong",[t._v("懒汉式")]),t._v("）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v('<context:property-placeholder location="">')]),t._v("标签为Bean加载外部配置文件")])]),t._v(" "),s("li",[s("p",[t._v("泛型依赖注入")])])]),t._v(" "),s("h3",{attrs:{id:"注解配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解配置"}},[t._v("#")]),t._v(" 注解配置")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("向容器注入Bean")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@Bean")])]),t._v(" "),s("li",[s("code",[t._v("@Import")]),t._v("（通过"),s("code",[t._v("ImportSelector")]),t._v("或"),s("code",[t._v("BeanDefinitionRegistrar")]),t._v("手动导入特定bean）")]),t._v(" "),s("li",[t._v("实现"),s("code",[t._v("FactoryBean")]),t._v("手动注册")])])]),t._v(" "),s("li",[s("p",[t._v("Bean生命周期方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@Bean")]),t._v("注解中手动指定"),s("code",[t._v("initMethod")]),t._v("与"),s("code",[t._v("destroyMethod")]),t._v("属性")]),t._v(" "),s("li",[t._v("实现"),s("code",[t._v("InitializingBean")]),t._v("/"),s("code",[t._v("DisposableBean")]),t._v("指定初始化与销毁方法")]),t._v(" "),s("li",[s("code",[t._v("@PostConstruct")]),t._v("/"),s("code",[t._v("@PreDestroy")])]),t._v(" "),s("li",[t._v("实现"),s("code",[t._v("BeanPostProcessor")]),t._v("拦截容器所有对象的生命周期行为")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("code",[t._v("ApplicationContextAwareProcessor")])]),t._v(" "),s("li",[s("code",[t._v("InitDestroyAnnotationBeanPostProcessor")])]),t._v(" "),s("li",[s("code",[t._v("BeanValidationBeanPostProcessor")])]),t._v(" "),s("li",[s("code",[t._v("AsyncAnnotationBeanPostProcessor")])])])])]),t._v(" "),s("li",[s("p",[t._v("容器组件装配")])])]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("p",[s("code",[t._v("@Autowired")]),t._v("优先通过Bean类型在容器中搜索组件，若找到多个则通过Bean名称（或通过"),s("code",[t._v("@Qualifier")]),t._v("显式指定的Bean名称）进行进一步装配；若最终未找到相应组件，默认抛出异常（"),s("code",[t._v("@Autowired(required=true)")]),t._v("）")]),t._v(" "),s("p",[t._v("可标注在属性、Setter方法、构造器方法（或方法参数）上")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("若组件只有一个有参构造器，则参数默认从容器中获取，无需标注"),s("code",[t._v("@Autowired")])]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("@Bean")]),t._v("手动注入组件时，方法参数（如果存在）默认从容器中获取，无需标注"),s("code",[t._v("@Autowired")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("@Resource")]),t._v("只能按照Bean名称进行组件装配")])])])]),t._v(" "),s("h2",{attrs:{id:"生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),s("h3",{attrs:{id:"applicationcontext生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#applicationcontext生命周期"}},[t._v("#")]),t._v(" ApplicationContext生命周期")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractApplicationContext.java")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalStateException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startupShutdownMonitor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prepare this context for refreshing.")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareRefresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tell the subclass to refresh the internal bean factory.")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("obtainFreshBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prepare the bean factory for use in this context.")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allows post-processing of the bean factory in context subclasses.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Invoke factory processors registered as beans in the context.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeBeanFactoryPostProcessors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register bean processors that intercept bean creation.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize message source for this context.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initMessageSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize event multicaster for this context.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initApplicationEventMulticaster")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize other special beans in specific context subclasses.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRefresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check for listener beans and register them.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerListeners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Instantiate all remaining (non-lazy-init) singletons.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishBeanFactoryInitialization")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last step: publish corresponding event.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishRefresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isWarnEnabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception encountered during context initialization - "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cancelling refresh attempt: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Destroy already created singletons to avoid dangling resources.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroyBeans")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset 'active' flag.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancelRefresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Propagate exception to caller.")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset common introspection caches in Spring's core, since we")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// might not ever need metadata for singleton beans anymore...")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resetCommonCaches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",[s("li",[s("h6",{attrs:{id:"preparerefresh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preparerefresh"}},[t._v("#")]),t._v(" "),s("code",[t._v("prepareRefresh();")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("initPropertySource();")]),t._v("供子类重写以构造个性化属性（如用于自定义配置中心）")]),t._v(" "),s("li",[s("code",[t._v("getEnvironment().validateRequiredProperties();")]),t._v("检验个性化属性的合法性")]),t._v(" "),s("li",[s("code",[t._v("earlyApplicationEvents = new LinkedHashSet<ApplicationEvent>();")]),t._v("保存容器中的部分早期事件")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("refreshBeanFactory();")]),t._v("刷新（或创建❓）"),s("code",[t._v("BeanFactory")])]),t._v(" "),s("li",[s("code",[t._v("getBeanFactory();")]),t._v("返回刚初始化的"),s("code",[t._v("DefaultListableBeanFactory")])])])]),t._v(" "),s("li",[s("h6",{attrs:{id:"preparebeanfactory-beanfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preparebeanfactory-beanfactory"}},[t._v("#")]),t._v(" "),s("code",[t._v("prepareBeanFactory(beanFactory);")])]),t._v(" "),s("ol",[s("li",[t._v("配置"),s("code",[t._v("BeanFactory")]),t._v("类加载器、表达式解析器、环境变量信息Map等组件")]),t._v(" "),s("li",[t._v("配置"),s("code",[t._v("ApplicationContextAwareProcessor")])]),t._v(" "),s("li",[t._v("忽略对"),s("code",[t._v("EnvironmentAware")]),t._v("、"),s("code",[t._v("EmbeddedValueResolveAware")]),t._v("实现类的自动配置；设置对"),s("code",[t._v("BeanFactory")]),t._v("、"),s("code",[t._v("ResourceLoader")]),t._v("、"),s("code",[t._v("ApplicationEventPublisher")]),t._v("、"),s("code",[t._v("ApplicationContext")]),t._v("组件的自动配置")]),t._v(" "),s("li",[t._v("配置"),s("code",[t._v("ApplicationListenerDetector")])])])]),t._v(" "),s("li",[s("h6",{attrs:{id:"postprocessbeanfactory-beanfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postprocessbeanfactory-beanfactory"}},[t._v("#")]),t._v(" "),s("code",[t._v("postProcessBeanFactory(beanFactory);")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("postProcessBeanFactory();")]),t._v("供子类重写以在容器预初始化完成时进行进一步的设置")])])]),t._v(" "),s("li",[s("h6",{attrs:{id:"invokebeanfactorypostprocessors-beanfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invokebeanfactorypostprocessors-beanfactory"}},[t._v("#")]),t._v(" "),s("code",[t._v("invokeBeanFactoryPostProcessors(beanFactory);")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("BeanFactory")]),t._v("标准初始化之后执行：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("根据是否实现了"),s("code",[t._v("PriorityOrdered")]),t._v("、"),s("code",[t._v("Order")]),t._v("接口分批获取")]),t._v("容器中所有的"),s("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("，"),s("strong",[t._v("分批排序后分批执行")]),t._v("：\n"),s("ol",[s("li",[s("code",[t._v("invokeBeanDefinitionRegistryPostProcessors(Collection, BeanFactory);")]),t._v("执行"),s("code",[t._v("BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry()")])]),t._v(" "),s("li",[s("code",[t._v("invokeBeanFactoryPostProcessors(Collection, BeanFactory);")]),t._v("执行"),s("code",[t._v("BeanDefinitionRegistryPostProcessor.postProcessBeanFactory()")])])])]),t._v(" "),s("li",[s("strong",[t._v("分批获取")]),t._v("容器中所有的"),s("code",[t._v("BeanFactoryPostProcessor")]),t._v("，"),s("strong",[t._v("分批排序后分批执行")]),t._v("：\n"),s("ol",[s("li",[s("code",[t._v("invokeBeanFactoryPostProcessors(Collection, BeanFactory);")]),t._v("执行"),s("code",[t._v("BeanFactoryPostProcessor.postProcessBeanFactory()")])])])])])]),t._v(" "),s("li",[s("h6",{attrs:{id:"registerbeanpostprocessors-beanfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registerbeanpostprocessors-beanfactory"}},[t._v("#")]),t._v(" "),s("code",[t._v("registerBeanPostProcessors(beanFactory);")])]),t._v(" "),s("p",[t._v("调用"),s("code",[t._v("PostProcessorRegistrationDelegate")]),t._v("的同名方法完成Bean后置处理器的注册")]),t._v(" "),s("ol",[s("li",[t._v("通过类型获取容器中所有已定义但未被创建的"),s("code",[t._v("BeanPostProcessor")]),t._v("，并进行统计与检查（"),s("code",[t._v("BeanPostPrcessorChecker")]),t._v("）")]),t._v(" "),s("li",[s("strong",[t._v("分批获取")]),t._v("容器中所有的"),s("code",[t._v("BeanPostProcessor")]),t._v("，"),s("strong",[t._v("分批排序后分批注册")]),t._v("进"),s("code",[t._v("BeanFactory")])]),t._v(" "),s("li",[t._v("最后注册"),s("code",[t._v("MergedBeanDefinitionPostProcessor")]),t._v("与"),s("code",[t._v("ApplicationListenerDetector")]),t._v("（在Bean初始化结束后将"),s("code",[t._v("ApplicationListener")]),t._v("的实现类作为应用监听器组件加入容器）")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("initMessageSource();")]),t._v("初始化用于消息绑定与消息解析的"),s("code",[t._v("MessageSource")]),t._v("组件")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("initApplicationEventMulticaster();")]),t._v("初始化事件派发器")])]),t._v(" "),s("li",[s("h6",{attrs:{id:"onrefresh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#onrefresh"}},[t._v("#")]),t._v(" "),s("code",[t._v("onRefresh();")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("onRefresh();")]),t._v("供子类重写以向容器中注册其他组件❓")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("registerListeners();")]),t._v("将容器中的所有应用监听器注册在事件派发器上，并调用"),s("code",[t._v("multicastEvent(ApplicationEvent)")]),t._v("派发可能存在的早期事件")])]),t._v(" "),s("li",[s("h4",{attrs:{id:"finishbeanfactoryinitialization-beanfactory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#finishbeanfactoryinitialization-beanfactory"}},[t._v("#")]),t._v(" "),s("code",[t._v("finishBeanFactoryInitialization(beanFactory);")])]),t._v(" "),s("ol",[s("li",[t._v("...")]),t._v(" "),s("li",[s("code",[t._v("preInstantiateSingletons();")]),t._v("完成自定义非懒加载单例Bean的初始化")])])]),t._v(" "),s("li",[s("h6",{attrs:{id:"finishrefresh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#finishrefresh"}},[t._v("#")]),t._v(" "),s("code",[t._v("finishRefresh();")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("initLifecycleProcessor();")]),t._v("获取容器生命周期处理器和以对容器"),s("code",[t._v("onRefresh()")]),t._v("及"),s("code",[t._v("onClose()")]),t._v("等生命周期方法进行拦截")]),t._v(" "),s("li",[s("code",[t._v("getLifecycleProcessor.onRefresh();")])]),t._v(" "),s("li",[s("code",[t._v("publishEvent(new ContextRefreshedEvent(this));")]),t._v("发布容器刷新完成事件")]),t._v(" "),s("li",[t._v("...")])])])]),t._v(" "),s("h3",{attrs:{id:"bean生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean生命周期"}},[t._v("#")]),t._v(" Bean生命周期")]),t._v(" "),s("h5",{attrs:{id:"容器的创建与bean的获取-spring-4-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器的创建与bean的获取-spring-4-x"}},[t._v("#")]),t._v(" 容器的创建与Bean的获取（Spring 4.x）")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("执行"),s("code",[t._v("ClassPathXmlApplicationContext(String[] configurations, boolean refresh, ApplicationContext parent)")]),t._v("或"),s("code",[t._v("AnnotationConfigApplicationContext(String[] configurations, boolean refresh, ApplicationContext parent)")]),t._v("构造器")])]),t._v(" "),s("li",[s("p",[t._v("执行"),s("code",[t._v("AbstractApplicationContext.refresh()")]),t._v("方法：解析配置文件，读取Bean的配置信息并保存在"),s("code",[t._v("ConfigurableListableBeanFactory")]),t._v("对象中：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("obtainFreshBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在"),s("code",[t._v("AbstractApplicationContext.finishBeanFactoryInitialization(BeanFactory beanFactory)")]),t._v("内的最后一步："),s("code",[t._v("DefaultListableBeanFactory.preInstantiateSingletons()")]),t._v("中完成用户"),s("strong",[t._v("自定义非懒加载的单实例Bean")]),t._v("的初始化：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DefaultListableBeanFactory.preInstantiateSingletons()")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" beanNames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanDefinitionMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取所有将要创建的Bean实例名称")]),t._v("\n  beanNames "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanDefinitionMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" beanNames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" bd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMergedLocalBeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依次创建（非抽象、单实例、非懒加载的）Bean实例")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("bd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAbstract")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" bd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("bd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isLazyInit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFactoryBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用重写的BeanFactory.getBean(String beanName)创建Bean")]),t._v("\n      \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//final BeanFactory<?> factory = (FactoryBean<?>) getBean(...)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean isEagerInit;")]),t._v("\n      \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用父类doGetBean()方法创建Bean")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SmartInitializingSingleton子类事件的监听处理器")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" beanNames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" singletonInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("singletonInstance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SmartInitializingSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      smartSingleton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterSingletonInstantiated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("DefaultListableBeanFactory.getBean(String beanName)")]),t._v("中调用父类"),s("code",[t._v("doGetBean(..)")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractBeanFactory.doGetBean(String name, Class<T> requiredType, Object[] args, boolean typeCheckOnly)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" sharedInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尝试从单实例Bean缓存（ConcurrentHashMap<String, Object> singletonObjects，单例池）中尝试获取已经创建完成的Bean实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sharedInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已找到先前创建的Bean实例")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未找到先前创建的Bean实例")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("markBeanAsCreated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" mbd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMergedLocalBeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取依赖Bean")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" dependsOn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDependsOn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dependsOn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存在依赖Bean，则递归调用getBean(String beanName)对其进行创建")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      sharedInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectFactory")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真正实现Bean实例的初始化")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("h6",{attrs:{id:"spring如何解决循环依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring如何解决循环依赖"}},[t._v("#")]),t._v(" Spring如何解决循环依赖？")]),t._v(" "),s("p",[t._v("答：Spring通过三级缓存解决了循环依赖，其中一级缓存为单例池"),s("code",[t._v("singletonObjects")]),t._v("，二级缓存为早期曝光对象"),s("code",[t._v("earlySingletonObjects")]),t._v("，三级缓存为单例对象工厂"),s("code",[t._v("singletonFactories")]),t._v("。")]),t._v(" "),s("p",[t._v("当A、B两个类发生循环引用时，在A完成"),s("strong",[t._v("实例化")]),t._v("后，使用实例化后的对象创建对象工厂，并添加到三级缓存中：如果A被AOP代理，那么工厂中的是A代理后的对象，如果A没有被AOP代理，那么工厂中的是A原本实例化的对象。")]),t._v(" "),s("p",[t._v("当A在初始化过程中进行属性注入时，会进行B的创建，由于B依赖了A，故创建B的同时又会去调用"),s("code",[t._v("getBean(a)")]),t._v("来获取A，此时会从三级缓存中进行获取（尚未初始化完成的A）：")]),t._v(" "),s("ol",[s("li",[t._v("先获取三级缓存中的对象工厂")]),t._v(" "),s("li",[t._v("调用对象工厂的"),s("code",[t._v("getObject()")]),t._v("方法获取A，将其注入到B中。此后B完成后续的初始化流程")])]),t._v(" "),s("p",[t._v("A等待B初始化完成后将B再注入到属性中，此时A完成后续的初始化流程")]),t._v(" "),s("p",[t._v("至此，循环依赖结束")]),t._v(" "),s("h6",{attrs:{id:"为什么要使用三级缓存呢-二级缓存能解决循环依赖吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用三级缓存呢-二级缓存能解决循环依赖吗"}},[t._v("#")]),t._v(" 为什么要使用三级缓存呢？二级缓存能解决循环依赖吗？")]),t._v(" "),s("p",[t._v("答：如果使用二级缓存解决循环依赖，所有Bean在实例化后（而非初始化阶段）就必须完成AOP代理，这样违背了Spring设计的原则：即，Spring应通过"),s("code",[t._v("AnnotationAwareAspectJAutoProxyCreator")]),t._v("后置处理器在Bean生命周期的最后一步实现AOP代理，而非在实例化后就立即进行AOP代理")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DefaultSingletonBeanRegistry.getSingleton(String beanName, ObjectFactory<?> singletonFactory) 将初始化完成的Bean单例加入容器")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("singletonObjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用ConcurrentHashMap对单实例的Bean对象进行缓存（beanName -> beanInstance）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" singletonObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("singletonObjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("singletonObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bean实例的获取")]),t._v("\n            singletonObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" singletonFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterSingletonCreation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" singletonObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将Bean对象加入单实例Bean缓存(singletonObjects，单例池）中")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" singletonObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h5",{attrs:{id:"bean实例化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean实例化"}},[t._v("#")]),t._v(" Bean实例化")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("createBean(...)")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("resolveBeforeInstantiation(...)")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation()")])])]),t._v(" "),s("li",[s("p",[t._v("[实例化]"),s("code",[t._v("AbstractAutowireCapableBeanFactory.doCreateBean(...)")])]),t._v(" "),s("p",[s("code",[t._v("AbstractAutowireCapableBeanFactory.instantiateBean(beanName, mbd)")]),t._v("，推断构造方法，创建Bean对象")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("AbstractAutowireCapableBeanFactory.populateBean(...)")])]),t._v(" "),s("p",[s("code",[t._v("InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation()")])]),t._v(" "),s("p",[s("code",[t._v("InstantiationAwareBeanPostProcessor.postProcessPropertyValues()")])]),t._v(" "),s("p",[s("code",[t._v("InstantiationAwareBeanPostProcessor.applyPropertyValues()")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractAutowireCapableBeanFactory.createBean(...)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【实例化前】尝试通过InstantiationAwareBeanPostProcessor获取该Bean的代理对象（InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation()）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" bean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveBeforeInstantiation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbdToUse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （成功获取代理对象）执行applyBeanPostProcessorsAfterInitialization(..)完成初始化后的收尾处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【实例化前】（不能获取代理对象）开始Bean实例的创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" beanInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doCreateBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbdToUse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" beanInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractAutowireCapableBeanFactory.doCreateBean(...)")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanWrapper")]),t._v(" instanceWrapper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSingleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  instanceWrapper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("factoryBeanInstanceCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instanceWrapper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  instanceWrapper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBeanInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【实例化】借助AbstractAutowireCapableBeanFactory.instantiateBean(beanName, mbd)，利用工厂方法直接获取或利用反射调用Bean对象的构造器完成原始Bean对象的初始化")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("postProcessingLock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("postProcessed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyMergedBeanDefinitionPostProcessors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历所有MergedBeanDefinitionPostProcessor的postProcessMergedBeanDefinition()方法")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//【实例化后】开始Bean对象的属性赋值与初始化流程")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" exposedObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("populateBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instanceWrapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【实例化后】遍历所有InstantiationAwareBeanPostProcessor的postProcessAfterInstantiation()及postProcessPropertyValues()方法，其中前者❓，后者❓；最后执行applyPropertyValues()，借助反射调用对象Setter方法等为Bean对象属性赋值")]),t._v("\n    exposedObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initializeBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exposedObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【实例化后】进行Bean初始化")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册Bean对象的销毁方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerDisposableBeanIfNecessary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"bean初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean初始化"}},[t._v("#")]),t._v(" Bean初始化")]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[s("code",[t._v("InstantiationAwareBeanPostProcessor.initializeBean(...)")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("BeanPostProcessor.postProcessBeforeInitialization()")])]),t._v(" "),s("li",[s("code",[t._v("AbstractAutowireCapableBeanFactory.invokeInitMethods(...)")]),t._v(" "),s("ol",[s("li",[t._v("[初始化]"),s("code",[t._v("InitializingBean.afterPropertiesSet()")]),t._v("/"),s("code",[t._v("init()")])])])]),t._v(" "),s("li",[s("code",[t._v("BeanPostProcessor.postProcessAfterInitialization()")]),t._v("，尝试借助"),s("code",[t._v("ProxyFactory")]),t._v("构造代理对象，并放入单例池，最终获取完整的Bean对象")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractAutowireCapableBeanFactory.initializeBean(final String beanName, final Object bean, Object[] args)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSecurityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeAwareMethods")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【初始化前】执行部分Aware接口回调（BeanNameAware、BeanClassLoaderAware、BeanFactoryAware）；其他有对应后置处理器的Aware接口回调发生在下一步的postProcessoBeforeInitialization()中")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" wrappedBean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ⓵")]),t._v("\n  wrappedBean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyBeanPostProcessorsBeforeInitialization")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wrappedBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【初始化前】遍历所有BeanPostProcessors，依次执行postProcessoBeforeInitialization()方法（一旦任一个BeanPostProcessors返回null，则终止遍历）")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ⓶")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeInitMethods")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wrappedBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mbd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//【初始化】回调初始化方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  wrappedBean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyBeanPostProcessorsAfterInitialization")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wrappedBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 【初始化后】遍历所有BeanPostProcessors.postProcessAfterInitialization()方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("⓵\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ApplicationContextAwareProcessor.postProcessBeforeInitialization(Object, String)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据所实现的Aware接口类型执行不同操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextAwareProcessor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeAwareInterfaces")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("⓶\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractAutowireCapableBeanFactory.invokeInitMethods(...)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回调多种初始化方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 是否实现InitializingBean接口（afterPropertiesSet()）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 是否存在自定义init()方法")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （执行其他初始化方法）")]),t._v("\n")])])]),s("h1",{attrs:{id:"aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" AOP")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("若被代理对象没有实现任何接口，则无法使用原生JDK动态代理，因为代理对象与被代理对象之间的唯一关联是所实现的接口")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在InvocationHandler.invoke(Object, Method, Object[])中对目标方法进行修饰")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvocationHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("若开启AOP，则容器中保存的是组件的代理对象。若组件实现了接口，则只能通过组件的接口类型访问其代理对象（JDK动态代理）；若组件未实现任何接口，则可通过组件的自身类型访问其代理对象（CGLIB动态代理）")])]),t._v(" "),s("li",[s("p",[t._v("切面类中配置通知方法")]),t._v(" "),s("p",[s("code",[t._v("@Before")]),t._v("/"),s("code",[t._v("@After")]),t._v("/"),s("code",[t._v("@AfterReturning")]),t._v("/"),s("code",[t._v("@AfterThrowing")]),t._v("/"),s("code",[t._v("@Around")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("通知方法的执行顺序：前置通知->后置通知->返回/异常通知")]),t._v(" "),s("ul",[s("li",[t._v("通知方法注解的切入点表达式中，"),s("code",[t._v("public")]),t._v("为可选（只支持public方法）"),s("code",[t._v("*")]),t._v("匹配全部路径或单层路径，"),s("code",[t._v("..")]),t._v("匹配多层路径（非全部）；"),s("code",[t._v("*")]),t._v("匹配任意类名、任意字符或单个参数，"),s("code",[t._v("..")]),t._v("匹配任意数量参数")])])]),t._v(" "),s("li",[s("p",[t._v("在（非环绕）通知方法参数中的"),s("code",[t._v("JoinPoint")]),t._v("对象中获取通知方法的签名和参数列表等信息；在通知方法注解的"),s("code",[t._v("returning")]),t._v("或"),s("code",[t._v("throwing")]),t._v("属性中配置接收通知方法返回值或异常的参数（"),s("code",[t._v("JoinPoint")]),t._v("对象在通知方法参数中必须位于首位）")])]),t._v(" "),s("li",[s("p",[t._v("通知方法可拥有任意访问修饰符和返回值，但其参数表必须唯一确定（Spring通过反射查找该方法的唯一方式）")])])])]),t._v(" "),s("li",[s("p",[t._v("环绕通知优先于普通通知执行（"),s("strong",[t._v("仅在当前切面类范围内")]),t._v("：环绕前置<->普通前置->目标方法->环绕后置->普通后置）；必须将"),s("code",[t._v("proceedingJoinPoint.proceed(Object[] args)")]),t._v("结果进行返回或将异常进行抛出，否则普通通知方法无法感知通知方法的返回值或异常")])])]),t._v(" "),s("blockquote",[s("p",[t._v("若存在多个切面类，则类名字母顺序在前或"),s("code",[t._v("@Order")]),t._v("注解值越小的先执行")])]),t._v(" "),s("h3",{attrs:{id:"源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[t._v("#")]),t._v(" 源码分析")]),t._v(" "),s("h4",{attrs:{id:"enableaspectjautoproxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enableaspectjautoproxy"}},[t._v("#")]),t._v(" "),s("code",[t._v("@EnableAspectJAutoProxy")])]),t._v(" "),s("p",[t._v("利用"),s("code",[t._v("BeanDefinitionRegistrar")]),t._v("向容器中注册"),s("code",[t._v("AspectJAutoProxyRegistrar")]),t._v("，后者向"),s("code",[t._v("BeanDefinitionRegistry")]),t._v("中注册"),s("code",[t._v("AnnotationAwareAspectJAutoProxyCreator")])]),t._v(" "),s("h4",{attrs:{id:"annotationawareaspectjautoproxycreator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotationawareaspectjautoproxycreator"}},[t._v("#")]),t._v(" "),s("code",[t._v("AnnotationAwareAspectJAutoProxyCreator")])]),t._v(" "),s("h5",{attrs:{id:"初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("registerBeanPostProcessors(beanFactory);")]),t._v("创建所需的BeanPostProcessor，并注册进BeanFactory")]),t._v(" "),s("li",[s("code",[t._v("finishBeanFactoryInitialization(beanFactory);")]),t._v("创建剩余的单例Bean（如非后置处理器类型的其他Bean），完成BeanFactory初始化")])]),t._v(" "),s("h5",{attrs:{id:"aop相关类的包装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop相关类的包装"}},[t._v("#")]),t._v(" AOP相关类的包装")]),t._v(" "),s("h6",{attrs:{id:"aop相关类的初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop相关类的初始化"}},[t._v("#")]),t._v(" AOP相关类的初始化")]),t._v(" "),s("ol",[s("li",[t._v("判断AOP关注点所在类是否已存在于缓存（"),s("code",[t._v("advicedBeans")]),t._v("）中")]),t._v(" "),s("li",[t._v("判断AOP关注点所在类是否实现了"),s("code",[t._v("Advice")]),t._v("/"),s("code",[t._v("Pointcut")]),t._v("/"),s("code",[t._v("Advisor")]),t._v("/"),s("code",[t._v("AopInfrastructureBean")]),t._v("等基础接口，或是否标注有"),s("code",[t._v("@Aspect")]),t._v("注解（是否是切面类）")]),t._v(" "),s("li",[t._v("判断是否需要跳过（当该类为"),s("code",[t._v("AspectJPointcutAdvisor")]),t._v("类型时跳过）")]),t._v(" "),s("li",[t._v("调用AOP关注点所在类的构造方法")])]),t._v(" "),s("h6",{attrs:{id:"aop相关类的初始化后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop相关类的初始化后"}},[t._v("#")]),t._v(" AOP相关类的初始化后")]),t._v(" "),s("p",[s("code",[t._v("wrapIfNecessary(Object bean, String beanName, String cacheKey)")]),t._v("将AOP关注点所在类包装为代理对象")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("AbstractAdvisorAutoProxyCreator.getAdviceAndAdvisorsForBean(..)")]),t._v("遍历所有增强器依次判断是否匹配，获取当前Bean所有能使用的增强器并"),s("strong",[t._v("排序")]),t._v("返回（拦截器，即通知方法）")]),t._v(" "),s("li",[t._v("将当前Bean保存至"),s("code",[t._v("advicedBeans")])]),t._v(" "),s("li",[t._v("为当前Bean创建代理对象\n"),s("ol",[s("li",[t._v("获取所有可用的增强器，保存至"),s("code",[t._v("proxyFactory")])]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("proxyFactory")]),t._v("创建"),s("code",[t._v("JdkDynamicAopProxy")]),t._v("或"),s("code",[t._v("ObjenesisCglibAopProxy")]),t._v("代理对象")])])])]),t._v(" "),s("h5",{attrs:{id:"aop的执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop的执行流程"}},[t._v("#")]),t._v(" AOP的执行流程")]),t._v(" "),s("p",[s("code",[t._v("CglibAopProxy.intercept()")])]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("DefaultAdvisorChainFactory.getInterceptorsAndDynamicInterceptionAdvice(..)")]),t._v("尝试获取关注点方法的"),s("strong",[t._v("有序")]),t._v("拦截器链（"),s("code",[t._v("MethodInterceptor")]),t._v("）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterceptorsAndDynamicInterceptionAdvice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Advised")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Nullable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" targetClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历所有增强器，根据实现接口的不同包装为org.aopalliance.intercept.MethodInterceptor对象")]),t._v("\n  \t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("advisor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PointcutAdvisor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("advisor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntroductionAdvisor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" interceptors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" registry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterceptors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("advisor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tinterceptorList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interceptors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("（若无法获取拦截器链）直接执行目标方法；")]),t._v(" "),s("p",[t._v("（若成功获取拦截器链）将关注点方法信息以及拦截器链包装为"),s("code",[t._v("CglibMethodInvocation")]),t._v("对象，并调用其"),s("code",[t._v("proceed()")]),t._v("方法")]),t._v(" "),s("blockquote",[s("p",[t._v("在该方法中"),s("strong",[t._v("链式获取")]),t._v("所有可用的拦截器，执行其"),s("code",[t._v("invoke(CglibMethodInvocation)")]),t._v("方法：")]),t._v(" "),s("ul",[s("li",[t._v("如果拦截器非"),s("code",[t._v("MethodBeforeAdviceInterceptor")]),t._v("，则继续调用"),s("code",[t._v("CglibMethodInvocation")]),t._v("的"),s("code",[t._v("proceed()")]),t._v("，"),s("code",[t._v("proceed()")]),t._v("返回之后再执行通知方法")]),t._v(" "),s("li",[t._v("如果拦截器为"),s("code",[t._v("MethodBeforeAdviceInterceptor")]),t._v("（拦截器链最后一组），则先执行增强器的通知方法，再继续调用"),s("code",[t._v("CglibMethodInvocation")]),t._v("的"),s("code",[t._v("proceed()")]),t._v("：此处由于已遍历至拦截器链末尾，则调用"),s("code",[t._v("invokeJoinpoint()")]),t._v("执行切入点方法")])])]),t._v(" "),s("p",[t._v("通过拦截器链，保证通知方法与切入点方法之间的执行顺序")])])]),t._v(" "),s("blockquote",[s("h5",{attrs:{id:"aop自调用解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop自调用解决方案"}},[t._v("#")]),t._v(" AOP自调用解决方案")])]),t._v(" "),s("h2",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("REQUIRED")])]),t._v(" "),s("li",[s("code",[t._v("SUPPORTS")])]),t._v(" "),s("li",[s("code",[t._v("MANDATORY")])]),t._v(" "),s("li",[s("code",[t._v("REQUIRES_NEW")])]),t._v(" "),s("li",[s("code",[t._v("NOT_SUPPORTED")])]),t._v(" "),s("li",[s("code",[t._v("NEVER")])]),t._v(" "),s("li",[s("code",[t._v("NESTED")])])]),t._v(" "),s("h4",{attrs:{id:"编程式事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程式事务"}},[t._v("#")]),t._v(" 编程式事务")]),t._v(" "),s("p",[s("code",[t._v("PlatformTransactionManager")]),t._v("接口")]),t._v(" "),s("h4",{attrs:{id:"声明式事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明式事务"}},[t._v("#")]),t._v(" 声明式事务")]),t._v(" "),s("h6",{attrs:{id:"abstractplatformtransactionmanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractplatformtransactionmanager"}},[t._v("#")]),t._v(" "),s("code",[t._v("AbstractPlatformTransactionManager")])]),t._v(" "),s("h6",{attrs:{id:"enabletransactionmanagement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enabletransactionmanagement"}},[t._v("#")]),t._v(" "),s("code",[t._v("@EnableTransactionManagement")])]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("TransactionManagementConfigurationSelector")]),t._v("，默认向容器中导入"),s("code",[t._v("AutoProxyRegistrar")]),t._v("和"),s("code",[t._v("ProxyTransactionManagementConfiguration")]),t._v("，前者向容器中注册"),s("code",[t._v("InfrastructureAdvisorAutoProxyCreator")]),t._v("，后者向容器中注册"),s("code",[t._v("BeanFactoryTransactionAttributeSourceAdvisor")])]),t._v(" "),s("h6",{attrs:{id:"beanfactorytransactionattributesourceadvisor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactorytransactionattributesourceadvisor"}},[t._v("#")]),t._v(" "),s("code",[t._v("BeanFactoryTransactionAttributeSourceAdvisor")])]),t._v(" "),s("ol",[s("li",[t._v("借助"),s("code",[t._v("AnnotationTransactionAttributeSource")]),t._v("中的注解解析器解析"),s("code",[t._v("@Transactional")]),t._v("注解配置信息")]),t._v(" "),s("li",[t._v("向"),s("code",[t._v("TransactionInterceptor")]),t._v("注入注解解析器与事务管理器"),s("code",[t._v("PlatformTransactionManager")]),t._v("（通过"),s("code",[t._v("@Qualifier")]),t._v("指定或从容器中获取事务管理器）")]),t._v(" "),s("li",[t._v("在代理对象执行目标方法时，通过事务拦截器链（中的事务管理器）进行事务控制")])]),t._v(" "),s("h1",{attrs:{id:"扩展组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展组件"}},[t._v("#")]),t._v(" 扩展组件")]),t._v(" "),s("h4",{attrs:{id:"beanfactorypostprocessor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactorypostprocessor"}},[t._v("#")]),t._v(" "),s("code",[t._v("BeanFactoryPostProcessor")])]),t._v(" "),s("p",[s("code",[t._v("BeanFactoryPostProcessor.postProcessBeanFactory()")])]),t._v(" "),s("p",[t._v("在BeanFactory标准初始化完成后调用，此时Bean定义信息已被加载至BeanFactory，但尚未进行实例化")]),t._v(" "),s("h4",{attrs:{id:"beandefinitionregistrypostprocessor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beandefinitionregistrypostprocessor"}},[t._v("#")]),t._v(" "),s("code",[t._v("BeanDefinitionRegistryPostProcessor")])]),t._v(" "),s("p",[t._v("在Bean定义信息将被加载至BeanFactory之前调用")]),t._v(" "),s("p",[t._v("先执行"),s("code",[t._v("BeanDefinitionRegistryPostProcessor.postProcessBeanDefinitionRegistry()")]),t._v("，再执行"),s("code",[t._v("BeanDefinitionRegistryPostProcessor.postProcessBeanFactory()")]),t._v("，再执行"),s("code",[t._v("BeanFactoryPostProcessor")]),t._v("的回调方法")]),t._v(" "),s("blockquote",[s("p",[t._v("用于在BeanFactory初始化完成之前向容器工厂添加额外的组件")])]),t._v(" "),s("h4",{attrs:{id:"applicationlistener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#applicationlistener"}},[t._v("#")]),t._v(" "),s("code",[t._v("ApplicationListener")])]),t._v(" "),s("p",[t._v("监听容器内发布的事件（事件继承至"),s("code",[t._v("ApplicationEvent")]),t._v("）")]),t._v(" "),s("p",[s("code",[t._v("@EventListener")])]),t._v(" "),s("p",[t._v("借助"),s("code",[t._v("EventListenerMethodProcessor")]),t._v("解析注解上的事件监听信息，而该方法处理器实现了"),s("code",[t._v("SmartInitializingSinglton")]),t._v("接口")]),t._v(" "),s("h6",{attrs:{id:"smartinitializingsingleton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#smartinitializingsingleton"}},[t._v("#")]),t._v(" "),s("code",[t._v("SmartInitializingSingleton")])]),t._v(" "),s("p",[t._v("在容器内所有非懒加载的单例Bean都初始化完成（"),s("code",[t._v("finishBeanFactoryInitialization(beanFactory)")]),t._v("）后，容器结束刷新（"),s("code",[t._v("finishRefresh()")]),t._v("）前调用")])])}),[],!1,null,null,null);a.default=e.exports}}]);